<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ERPConnect45</name>
    </assembly>
    <members>
        <member name="T:ERPConnect.Utils.BatchReturn">
            <summary>
            Represents a message returned from a Batch Input transaction.
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.BatchReturn.#ctor">
            <summary>
            Initializes a new BapiReturn object.
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.BatchReturn.Type">
            <summary>
            Message type (e.g. W for warning or E for error)
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.BatchReturn.MessageID">
            <summary>
            Batch input message ID
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.BatchReturn.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.BatchReturn.MessageNumber">
            <summary>
            Number of system message
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.BatchReturn.MessageVariable1">
            <summary>
            Variable contained in the message string
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.BatchReturn.MessageVariable2">
            <summary>
            Variable contained in the message string
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.BatchReturn.MessageVariable3">
            <summary>
            Variable contained in the message string
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.BatchReturn.MessageVariable4">
            <summary>
            Variable contained in the message string
            </summary>
        </member>
        <member name="T:ERPConnect.Utils.BatchReturnCollection">
            <summary>
            Collection of BatchReturn objects
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.BatchReturnCollection.Add(ERPConnect.Utils.BatchReturn)">
            <summary>
            Adds a new BatchReturn object to the collection.
            </summary>
            <param name="NewBatchReturn">The BatchReturn object to be added</param>
        </member>
        <member name="P:ERPConnect.Utils.BatchReturnCollection.Item(System.Int32)">
            <summary>
            Returns a BatchReturn object at a given position 
            </summary>
            <param name="Index">Index</param>
            <returns>A single BatchReturn object</returns>		
        </member>
        <member name="T:ERPConnect.Utils.BatchStep">
            <summary>
            BatchStep represents a single step for a SAP transaction
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.BatchStep.#ctor">
            <summary>
            Initializies an empty batch step.
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.BatchStep.#ctor(System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new Batch Step
            </summary>
            <param name="ProgramName">Name of the ABAP program</param>
            <param name="DynproNumber">Name of the current dynpro number</param>
            <param name="BeginNewDynpro">True / false whether the step begins to fill a new dynpro</param>
            <param name="FieldName">Name of the dynprofield to be set</param>
            <param name="FieldValue">Value of the field to be set</param>
        </member>
        <member name="P:ERPConnect.Utils.BatchStep.ProgramName">
            <summary>
            Name of the ABAP program
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.BatchStep.DynproNumber">
            <summary>
            Name of the current dynpro number
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.BatchStep.BeginNewDynpro">
            <summary>
            True / false whether the step begins to fill a new dynpro
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.BatchStep.FieldName">
            <summary>
            Name of the dynprofield to be set
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.BatchStep.FieldValue">
            <summary>
            Value of the field to be set
            </summary>
        </member>
        <member name="T:ERPConnect.Utils.BatchStepCollection">
            <summary>
            BatchStepCollection represents a collection of BatchStep objects
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.BatchStepCollection.#ctor">
            <summary>
            Initializes an empty collection over BatchStep objects
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.BatchStepCollection.Add(ERPConnect.Utils.BatchStep)">
            <summary>
            Adds a new BatchStep object to the collection
            </summary>
            <param name="NewParameter">The BatchStep object to be added</param>
        </member>
        <member name="M:ERPConnect.Utils.BatchStepCollection.Insert(System.Int32,ERPConnect.Utils.BatchStep)">
            <summary>
            Inserts a new BatchStep object 
            </summary>
            <param name="Index">Index of the new BatchStep object</param>
            <param name="NewParameter">The BatchStep object to be added</param>
        </member>
        <member name="P:ERPConnect.Utils.BatchStepCollection.Item(System.Int32)">
            <summary>
            Returns a BatchStep object by a given index
            </summary>
            <param name="Index">Index of the BatchStep object in the collection</param>
        </member>
        <member name="T:ERPConnect.Utils.Transaction">
            <summary>
            Transaction represents a single SAP transction
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.Transaction.#ctor(ERPConnect.R3Connection)">
            <summary>
            Initializes a Transction object
            </summary>
            <param name="Connection">A valid R3Connection object</param>
        </member>
        <member name="M:ERPConnect.Utils.Transaction.#ctor">
            <summary>
            Initializes a Tranction object
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.Transaction.Execute">
            <summary>
            Executes the transaction
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.Transaction.AddStepSetCursor(System.String)">
            <summary>
            Adds a new Batch step
            </summary>
            <param name="FieldName">Name of the field where the cursor should be set</param>
        </member>
        <member name="M:ERPConnect.Utils.Transaction.AddStepSetField(System.String,System.String)">
            <summary>
            Adds a new batch step
            </summary>
            <param name="FieldName">Name of the field to be set</param>
            <param name="FieldValue">Value of the field to be set</param>
        </member>
        <member name="M:ERPConnect.Utils.Transaction.AddStepSetOKCode(System.String)">
            <summary>
            Adds a new batch step that executes an OK code in the transaction
            </summary>
            <param name="OKCode">OB code</param>
        </member>
        <member name="M:ERPConnect.Utils.Transaction.AddStepSetNewDynpro(System.String,System.String)">
            <summary>
            Adds a new batch step
            </summary>
            <param name="Program">Program name</param>
            <param name="DynproNumber">The Dynpronumber of the new screen</param>
        </member>
        <member name="M:ERPConnect.Utils.Transaction.AddStepSwitchToShowAll">
            <summary>
            Adds a new batch step that switch the mode to 'Show All'
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.Transaction.AddStepSwitchToShowOnlyErrors">
            <summary>
            Adds a new batch step that switch the mode to 'Show Only Errors'
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.Transaction.SetCustomFunctionName(System.String)">
            <summary>
            Use this function to set a custom RFC instead of RFC_CALL_TRANSACTION_USING or RFC_CALL_TRANSACTION
            </summary>
            <param name="CustomFunctionName">The name of the custom RFC</param>
        </member>
        <member name="P:ERPConnect.Utils.Transaction.Connection">
            <summary>
            A R3Connection object
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.Transaction.BatchSteps">
            <summary>
            The steps to be executed when running the transaction
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.Transaction.TCode">
            <summary>
            The transaction code to be performed
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.Transaction.ExecutionMode">
            <summary>
            Defines the execution mode
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.Transaction.Type">
            <summary>
            Defines the execution type
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.Transaction.UpdateMode">
            <summary>
            Defines the Update mode
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.Transaction.Returns">
            <summary>
            Batch Input return messages
            </summary>
        </member>
        <member name="T:ERPConnect.Utils.TransactionDialogMode">
            <summary>
            Batch Input Dialog Modes
            </summary>
        </member>
        <member name="F:ERPConnect.Utils.TransactionDialogMode.ShowAll">
            <summary>
            The transaction steps will be shown in SAP GUI
            </summary>
        </member>
        <member name="F:ERPConnect.Utils.TransactionDialogMode.ShowOnlyErrors">
            <summary>
            The transaction will pop up if any errors occur during execution
            </summary>
        </member>
        <member name="F:ERPConnect.Utils.TransactionDialogMode.Background">
            <summary>
            The transaction will be executed in background mode
            </summary>
        </member>
        <member name="T:ERPConnect.Utils.TransactionType">
            <summary>
            Batch Input Transaction Types
            </summary>
        </member>
        <member name="F:ERPConnect.Utils.TransactionType.Single">
            <summary>
            Only one transaction is contained in the Batch table
            </summary>
        </member>
        <member name="F:ERPConnect.Utils.TransactionType.Multiple">
            <summary>
            More than one transaction will be processed at once
            </summary>
        </member>
        <member name="T:ERPConnect.Utils.TransactionUpdateMode">
            <summary>
            Batch Input update mode
            </summary>
        </member>
        <member name="F:ERPConnect.Utils.TransactionUpdateMode.Asynchronous">
            <summary>
            Asynchronous call
            </summary>
        </member>
        <member name="F:ERPConnect.Utils.TransactionUpdateMode.Synchronous">
            <summary>
            Synchronous call
            </summary>
        </member>
        <member name="F:ERPConnect.Utils.TransactionUpdateMode.Local">
            <summary>
            The call will be processed locally
            </summary>
        </member>
        <member name="T:ERPConnect.BW.BWCube">
            <summary>
            BWCube represents a BW Cube to extract data from
            </summary>
        </member>
        <member name="M:ERPConnect.BW.BWCube.#ctor(ERPConnect.R3Connection)">
            <summary>
            Constructs a BWCube object
            </summary>
            <param name="Connection">Reference to a valid R3Connection object</param>
        </member>
        <member name="M:ERPConnect.BW.BWCube.CreateCube(System.String)">
            <summary>
            Constructs a BWCube object with all its dimensions, properties and measures
            </summary>
            <param name="CubeName">Name of the Cube or Query Cube (e.g. 0D_DECU or 0D_DECU/VARDEMO01)</param>
        </member>
        <member name="M:ERPConnect.BW.BWCube.ToString">
            <summary>
            Returns an object description text
            </summary>
            <returns>Object description text</returns>
        </member>
        <member name="M:ERPConnect.BW.BWCube.SelectAllForFlatMDX">
            <summary>
            Do not use! For internal use only
            </summary>
        </member>
        <member name="M:ERPConnect.BW.BWCube.GetFlatMDX">
            <summary>
            Returns a MDX string that represents the query for the cube's data
            </summary>
            <returns>A MDX string</returns>
        </member>
        <member name="M:ERPConnect.BW.BWCube.Execute">
            <summary>
            Executes the cube / query extraction
            </summary>
            <returns>DataTable object with flat result</returns>
        </member>
        <member name="M:ERPConnect.BW.BWCube.SaveToXML(System.String)">
            <summary>
            Saves the current object to XML
            </summary>
            <param name="Filename">File name</param>
        </member>
        <member name="M:ERPConnect.BW.BWCube.SaveToXML">
            <summary>
            Saves the current object to XML
            </summary>
            <returns>A string which contains the XML file</returns>
        </member>
        <member name="M:ERPConnect.BW.BWCube.LoadFromXML(System.String)">
            <summary>
            Load a BWCube object hierachy from an XML file
            </summary>
            <param name="FileName">Filename</param>
        </member>
        <member name="M:ERPConnect.BW.BWCube.LoadFromXML(System.IO.StreamReader)">
            <summary>
            Load a BWCube object hierachy from an XML file
            </summary>
            <param name="reader">StreamReader to XML resource</param>
        </member>
        <member name="M:ERPConnect.BW.BWCube.LoadFromXMLString(System.String)">
            <summary>
            Load a BWCube object hierachy from an XML string
            </summary>
            <param name="XMLString">XML string</param>
        </member>
        <member name="E:ERPConnect.BW.BWCube.IncomingPackage">
            <summary>
            IncomingPackage is fired, when addtional data packages are fetched from SAP.
            </summary>
        </member>
        <member name="P:ERPConnect.BW.BWCube.Connection">
            <summary>
            Reference to a valid R3Connection object
            </summary>
        </member>
        <member name="P:ERPConnect.BW.BWCube.Name">
            <summary>
            Name of the cube
            </summary>
        </member>
        <member name="P:ERPConnect.BW.BWCube.Dimensions">
            <summary>
            This collection repesents all dimensions of the BW Cube / BW Query
            </summary>
        </member>
        <member name="P:ERPConnect.BW.BWCube.Measures">
            <summary>
            This collection repesents all measures of the BW Cube / BW Query
            </summary>
        </member>
        <member name="P:ERPConnect.BW.BWCube.Variables">
            <summary>
            This collection repesents all variables of the BW Query
            </summary>
        </member>
        <member name="P:ERPConnect.BW.BWCube.AdjustFlatOutputColumnsOrdinal">
            <summary>
            DO NOT USE!!! FOR INTERNAL USE ONLY!!!!
            </summary>
        </member>
        <member name="P:ERPConnect.BW.BWCube.UseFormattedValue">
            <summary>
            Determines if the data should be formatted as defined in the query designer (e.g. number of decimals or factor)
            </summary>
        </member>
        <member name="P:ERPConnect.BW.BWCube.PackageSize">
            <summary>
            Determines if the data should be retreived in packages and if so, how many rows should be in one package
            </summary>
        </member>
        <member name="P:ERPConnect.BW.BWCube.UseNewOlapBapis">
            <summary>
            Gets or sets a value indicating whether the new OLAP BAPIs should be used for the extraction (see SAP note 1232751)
            </summary>
        </member>
        <member name="T:ERPConnect.BW.BWCube.OnIncomingPackage">
            <exclude/>
        </member>
        <member name="T:ERPConnect.BW.Dimension">
            <summary>
            A cube's dimension
            </summary>
        </member>
        <member name="M:ERPConnect.BW.Dimension.#ctor">
            <summary>
            Constructs a new, empty dimension
            </summary>
        </member>
        <member name="M:ERPConnect.BW.Dimension.#ctor(ERPConnect.R3Connection,ERPConnect.BW.BWCube,System.String,System.String,System.String,System.String,ERPConnect.BW.DimensionType)">
            <summary>
            Constructs a new dimension that is ready to use
            </summary>
            <param name="Connection">A valid connection object</param>
            <param name="Cube">A BWCube object</param>
            <param name="Name">The name of the dimension</param>
            <param name="UniqueName">The unique name of the dimension</param>
            <param name="Description">The description of the dimension</param>
            <param name="Caption">The caption of the dimension</param>
            <param name="Type">The type of the dimension (measure, normal or time)</param>
        </member>
        <member name="M:ERPConnect.BW.Dimension.#ctor(ERPConnect.R3Connection,ERPConnect.BW.BWCube,System.String,System.String,System.String,System.String,ERPConnect.BW.DimensionType,System.String,System.Int32)">
            <summary>
            Constructs a new dimension that is ready to use
            </summary>
            <param name="Connection">A valid connection object</param>
            <param name="Cube">A BWCube object</param>
            <param name="Name">The name of the dimension</param>
            <param name="UniqueName">The unique name of the dimension</param>
            <param name="Description">The description of the dimension</param>
            <param name="Caption">The caption of the dimension</param>
            <param name="Type">The type of the dimension (measure, normal or time)</param>
            <param name="DataType">The data type of the dimension (e.g. CHAR)</param>
            <param name="Decimals">The number of decimals digits (if the DataType is DEC)</param>
        </member>
        <member name="M:ERPConnect.BW.Dimension.GetMembers">
            <summary>
            Returns a DataTable object with all members of the dimension
            </summary>
            <returns>A DataTable with the members of the dimension</returns>
        </member>
        <member name="M:ERPConnect.BW.Dimension.GetMembers(System.Int32,System.Int32)">
            <summary>
            Returns a DataTable object with all members of the dimension
            </summary>
            <param name="StartRow">Start row</param>
            <param name="EndRow">End row</param>
            <returns>A DataTable with the members of the dimension</returns>
        </member>
        <member name="P:ERPConnect.BW.Dimension.Connection">
            <summary>
            A valid connection object
            </summary>
        </member>
        <member name="P:ERPConnect.BW.Dimension.Name">
            <summary>
            The name of the dimension
            </summary>
        </member>
        <member name="P:ERPConnect.BW.Dimension.UniqueName">
            <summary>
            The unique name of the dimension
            </summary>
        </member>
        <member name="P:ERPConnect.BW.Dimension.Description">
            <summary>
            The description of the dimension
            </summary>
        </member>
        <member name="P:ERPConnect.BW.Dimension.Caption">
            <summary>
            The caption of the dimension
            </summary>
        </member>
        <member name="P:ERPConnect.BW.Dimension.DataType">
            <summary>
            The data type of the dimension (e.g. CHAR)
            </summary>
        </member>
        <member name="P:ERPConnect.BW.Dimension.Decimals">
            <summary>
            The number of decimals digits (if the DataType is DEC)
            </summary>
        </member>
        <member name="P:ERPConnect.BW.Dimension.FlatOrdinal">
            <summary>
            The ordinal number of this dimension when the dimension is contained in the flat mdx statement
            </summary>
        </member>
        <member name="P:ERPConnect.BW.Dimension.Cube">
            <summary>
            Reference to the BWCube object the dimension belongs to
            </summary>
        </member>
        <member name="P:ERPConnect.BW.Dimension.Type">
            <summary>
            The type of the dimension (measure, normal or time)
            </summary>
        </member>
        <member name="P:ERPConnect.BW.Dimension.Properties">
            <summary>
            A reference to the Properties collection of this dimension
            </summary>
        </member>
        <member name="P:ERPConnect.BW.Dimension.Hierarchies">
            <summary>
            A reference to the Hierarchies collection, if this dimension contains hierarchies
            </summary>
        </member>
        <member name="P:ERPConnect.BW.Dimension.SelectForFlatMDX">
            <summary>
            Defines if this dimension is contained in the flat mdx functionality
            </summary>
        </member>
        <member name="T:ERPConnect.BW.DimensionCollection">
            <summary>
            A collection of BWDimension objects
            </summary>
        </member>
        <member name="M:ERPConnect.BW.DimensionCollection.#ctor">
            <summary>
            Constructs a new DimensionCollection object
            </summary>
        </member>
        <member name="M:ERPConnect.BW.DimensionCollection.Add(ERPConnect.BW.Dimension)">
            <summary>
            Adds an existing BWDimension object to the collection
            </summary>
            <param name="NewParameter">The BWDimension object to be added</param>
        </member>
        <member name="M:ERPConnect.BW.DimensionCollection.Add(ERPConnect.R3Connection,ERPConnect.BW.BWCube,System.String,System.String,System.String,System.String,ERPConnect.BW.DimensionType)">
            <summary>
            Creates a new BWDimension object and adds it to the collection
            </summary>
            <param name="Connection">A valid connection object</param>
            <param name="Cube">A BWCube object</param>
            <param name="Name">The name of the dimension</param>
            <param name="UniqueName">The unique name of the dimension</param>
            <param name="Description">The description of the dimension</param>
            <param name="Caption">The caption of the dimension</param>
            <param name="Type">The type of the dimension (measure, normal or time)</param>
            <returns>The BWDimension object that is created and added to the collection</returns>
        </member>
        <member name="M:ERPConnect.BW.DimensionCollection.Add(ERPConnect.R3Connection,ERPConnect.BW.BWCube,System.String,System.String,System.String,System.String,ERPConnect.BW.DimensionType,System.String,System.Int32)">
            <summary>
            Creates a new BWDimension object and adds it to the collection
            </summary>
            <param name="Connection">A valid connection object</param>
            <param name="Cube">A BWCube object</param>
            <param name="Name">The name of the dimension</param>
            <param name="UniqueName">The unique name of the dimension</param>
            <param name="Description">The description of the dimension</param>
            <param name="Caption">The caption of the dimension</param>
            <param name="Type">The type of the dimension (measure, normal or time)</param>
            <param name="DataType">The data type of the dimension (e.g. CHAR)</param>
            <param name="Decimals">The number of decimals digits (if the DataType is DEC)</param>
            <returns>The BWDimension object that is created and added to the collection</returns>
        </member>
        <member name="M:ERPConnect.BW.DimensionCollection.Insert(System.Int32,ERPConnect.BW.Dimension)">
            <summary>
            Inserts an existing BWDimension object to the collection
            </summary>
            <param name="Index">The index where the object should be added at</param>
            <param name="NewParameter">The BWDimension object to be added</param>
        </member>
        <member name="M:ERPConnect.BW.DimensionCollection.ContainsDimension(System.String)">
            <summary>
            Detects if the diemnsion with a given name is contained in the collection
            </summary>
            <param name="DimensionName">The name of the dimension to be looked up for</param>
            <returns>true / false depending if the dimension is already added to the collection</returns>
        </member>
        <member name="P:ERPConnect.BW.DimensionCollection.Item(System.Int32)">
            <summary>
            Returns a BWDimension object at a given position
            </summary>
            <param name="Index">The ordinal number of the object</param>
            <returns>The BWDimension object at the given position</returns>
        </member>
        <member name="P:ERPConnect.BW.DimensionCollection.Item(System.String)">
            <summary>
            Returns a BWDimension object for a given name
            </summary>
            <param name="UniqueName">Name or UniqueName of the BWDimension object to be returned</param>
            <returns>The BWDimension object with the given name</returns>
        </member>
        <member name="T:ERPConnect.BW.DimensionType">
            <summary>
            Type of the dimension
            </summary>
        </member>
        <member name="F:ERPConnect.BW.DimensionType.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:ERPConnect.BW.DimensionType.Time">
            <summary>
            Time dimension
            </summary>
        </member>
        <member name="F:ERPConnect.BW.DimensionType.Measure">
            <summary>
            Measure
            </summary>
        </member>
        <member name="T:ERPConnect.BW.Hierarchy">
            <summary>
            This class represents a SAP BW Hierarchy
            </summary>
        </member>
        <member name="M:ERPConnect.BW.Hierarchy.#ctor">
            <summary>
            Constructs a new, empty BW Hierarchy
            </summary>
        </member>
        <member name="M:ERPConnect.BW.Hierarchy.#ctor(ERPConnect.R3Connection,ERPConnect.BW.BWCube,System.String,System.String,System.String)">
            <summary>
            Constructs a new BW Hierarchy
            </summary>
            <param name="Connection">Reference to a R3Connection object</param>
            <param name="Cube">Reference of the cube this hierarchy belongs to</param>
            <param name="Name">Name of the hierarchy</param>
            <param name="UniqueName">Unique name of the hierarchy</param>
            <param name="Caption">A brief description text</param>
        </member>
        <member name="M:ERPConnect.BW.Hierarchy.GetMembers">
            <summary>
            Returns a table conataining the members of this hierarchy
            </summary>
            <returns>A table conataining the members of this hierarchy</returns>
        </member>
        <member name="M:ERPConnect.BW.Hierarchy.GetMembers(System.Int32,System.Int32)">
            <summary>
            Returns a table conataining the members of this hierarchy
            </summary>
            <param name="StartRow">The row to be started with</param>
            <param name="EndRow">The last row to be returned</param>
            <returns>A table conataining the members of this hierarchy</returns>
        </member>
        <member name="P:ERPConnect.BW.Hierarchy.Cube">
            <summary>
            Reference of the cube this hierarchy belongs to
            </summary>
        </member>
        <member name="P:ERPConnect.BW.Hierarchy.Connection">
            <summary>
            Reference to a R3Connection object
            </summary>
        </member>
        <member name="P:ERPConnect.BW.Hierarchy.Name">
            <summary>
            Name of the hierarchy
            </summary>
        </member>
        <member name="P:ERPConnect.BW.Hierarchy.UniqueName">
            <summary>
            Unique name of the hierarchy
            </summary>
        </member>
        <member name="P:ERPConnect.BW.Hierarchy.Caption">
            <summary>
            A brief description text
            </summary>
        </member>
        <member name="T:ERPConnect.BW.HierarchyCollection">
            <summary>
            This collecton class represents a set of hierarchy objects
            </summary>
        </member>
        <member name="M:ERPConnect.BW.HierarchyCollection.#ctor">
            <summary>
            Constructs a new HierarchyCollection object
            </summary>
        </member>
        <member name="M:ERPConnect.BW.HierarchyCollection.Add(ERPConnect.BW.Hierarchy)">
            <summary>
            Adds an existing Hierarchy object to the collection
            </summary>
            <param name="NewParameter">The Hierarchy object to be added</param>
        </member>
        <member name="M:ERPConnect.BW.HierarchyCollection.Add(ERPConnect.R3Connection,ERPConnect.BW.BWCube,System.String,System.String,System.String)">
            <summary>
            Adds a new Hierarchy object to the collection
            </summary>
            <param name="Connection">Reference to a R3Connection object</param>
            <param name="Cube">Reference of the cube this hierarchy belongs to</param>
            <param name="Name">Name of the hierarchy</param>
            <param name="UniqueName">Unique name of the hierarchy</param>
            <param name="Caption">A brief description text</param>
            <returns>The hierarchy object that was created and added to the collection</returns>
        </member>
        <member name="M:ERPConnect.BW.HierarchyCollection.Insert(System.Int32,ERPConnect.BW.Hierarchy)">
            <summary>
            Inserts an existing Hierarchy object to the collection
            </summary>
            <param name="Index">Oridnal number of the position</param>
            <param name="NewParameter">The Hierarchy object to be added</param>
        </member>
        <member name="P:ERPConnect.BW.HierarchyCollection.Item(System.Int32)">
            <summary>
            Returns an hierarchy object of a given position
            </summary>
            <param name="Index">The ordinal number of the hierarchy object to be returned</param>
            <returns>A Hierarchy object</returns>
        </member>
        <member name="P:ERPConnect.BW.HierarchyCollection.Item(System.String)">
            <summary>
            Returns a Hierarchy object by its name
            </summary>
            <param name="UniqueName">Name of the hierarchy object to be retruned</param>
            <returns>A Hierarchy object</returns>
        </member>
        <member name="T:ERPConnect.BW.MembersDataTable">
            <summary>
            A DataTable object that conatains a list of members
            </summary>
        </member>
        <member name="M:ERPConnect.BW.MembersDataTable.AddMembersRow(ERPConnect.BW.MembersRow)">
            <summary>
            Adds a new row to the table
            </summary>
            <param name="row">The MembersRow object to be added</param>
        </member>
        <member name="M:ERPConnect.BW.MembersDataTable.AddMembersRow(System.String,System.String,System.String,System.String)">
            <summary>
            Create a new MembersRow object and adds it to the table
            </summary>
            <param name="MemberName">Name of the member</param>
            <param name="UniqueName">Unqiue name of the member</param>
            <param name="ParentUniqueName">Name of parent member</param>
            <param name="MemberCaption">Caption of the member</param>
            <returns>The MembersRow object that was created and added</returns>
        </member>
        <member name="M:ERPConnect.BW.MembersDataTable.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:ERPConnect.BW.MembersDataTable.Clone">
            <summary>
            Clones the object
            </summary>
            <returns>The new object that was cloned</returns>
        </member>
        <member name="M:ERPConnect.BW.MembersDataTable.CreateInstance">
            <summary>
            Creates a new MembersDataTable object
            </summary>
            <returns>The new MembersDataTable object</returns>
        </member>
        <member name="M:ERPConnect.BW.MembersDataTable.NewMembersRow">
            <summary>
            Creates a new MembersRow object
            </summary>
            <returns>A new MembersRow object</returns>
        </member>
        <member name="M:ERPConnect.BW.MembersDataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            <summary>
            Creates a new DataRow object from a DataRowBuilder object
            </summary>
            <param name="builder">The DataRowBuilder object</param>
            <returns>The new DataRow object</returns>
        </member>
        <member name="M:ERPConnect.BW.MembersDataTable.GetRowType">
            <summary>
            Returns the a Type object of the row
            </summary>
            <returns>The Type object of the row</returns>
        </member>
        <member name="P:ERPConnect.BW.MembersDataTable.Count">
            <summary>
            Number of rows contained in the DataTable object
            </summary>
        </member>
        <member name="P:ERPConnect.BW.MembersDataTable.Item(System.Int32)">
            <summary>
            returns a MembersRow object at the given position
            </summary>
            <param name="index">The ordinal number of the object to be returned</param>
            <returns>The MembersRow object at the given position</returns>
        </member>
        <member name="T:ERPConnect.BW.MembersRow">
            <summary>
            The MembersRow class represent a single row of a Members DataTable
            </summary>
        </member>
        <member name="M:ERPConnect.BW.MembersRow.IsMemberNameNull">
            <summary>
            Defines if the column MemberName is null
            </summary>
            <returns>true / false</returns>
        </member>
        <member name="M:ERPConnect.BW.MembersRow.SetMemberNameNull">
            <summary>
            Sets the column MemberName to null
            </summary>
        </member>
        <member name="M:ERPConnect.BW.MembersRow.IsUniqueNameNull">
            <summary>
            Defines if the column UniqueMember is null
            </summary>
            <returns>true / false</returns>
        </member>
        <member name="M:ERPConnect.BW.MembersRow.SetUniqueNameNull">
            <summary>
             Sets the column UniqueMember to null
            </summary>
        </member>
        <member name="M:ERPConnect.BW.MembersRow.IsParentUniqueNameNull">
            <summary>
            Defines if the column ParentUniqueMember is null
            </summary>
            <returns>true / false</returns>
        </member>
        <member name="M:ERPConnect.BW.MembersRow.SetParentUniqueNameNull">
            <summary>
            Sets the column ParentUnqiueName to null
            </summary>
        </member>
        <member name="M:ERPConnect.BW.MembersRow.IsMemberCaptionNull">
            <summary>
            Defines if the column MemberCaption is null
            </summary>
            <returns></returns>
        </member>
        <member name="M:ERPConnect.BW.MembersRow.SetMemberCaptionNull">
            <summary>
            Sets the column MemberCaption to null
            </summary>
        </member>
        <member name="P:ERPConnect.BW.MembersRow.MemberName">
            <summary>
            Name of the member
            </summary>
        </member>
        <member name="P:ERPConnect.BW.MembersRow.UniqueName">
            <summary>
            Defines a unique name for this member
            </summary>
        </member>
        <member name="P:ERPConnect.BW.MembersRow.ParentUniqueName">
            <summary>
            The unique name of the parent member
            </summary>
        </member>
        <member name="P:ERPConnect.BW.MembersRow.MemberCaption">
            <summary>
            The caption of the member
            </summary>
        </member>
        <member name="T:ERPConnect.BW.Property">
            <summary>
            A cube dimension's property
            </summary>
        </member>
        <member name="M:ERPConnect.BW.Property.#ctor">
            <summary>
            Constructs a new Property object
            </summary>
        </member>
        <member name="M:ERPConnect.BW.Property.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs a new Property object
            </summary>
            <param name="Name">Name of the property</param>
            <param name="Caption">Caption of the property</param>
            <param name="DataType">SAP data type of the property (e.g. CHAR)</param>
        </member>
        <member name="P:ERPConnect.BW.Property.Name">
            <summary>
            Name of the property
            </summary>
        </member>
        <member name="P:ERPConnect.BW.Property.Caption">
            <summary>
            Caption of the property
            </summary>
        </member>
        <member name="P:ERPConnect.BW.Property.FlatOrdinal">
            <summary>
            The ordinal number of the property when using FlatMDX process
            </summary>
        </member>
        <member name="P:ERPConnect.BW.Property.DataType">
            <summary>
            The SAP data type of the property (e.g. CHAR)
            </summary>
        </member>
        <member name="P:ERPConnect.BW.Property.SelectForFlatMDX">
            <summary>
            Set to true to have this property as column in the output of the FlatMDX process
            </summary>
        </member>
        <member name="T:ERPConnect.BW.PropertyCollection">
            <summary>
            A collection of property objects
            </summary>
        </member>
        <member name="M:ERPConnect.BW.PropertyCollection.#ctor">
            <summary>
            Create a new PropertyCollection object
            </summary>
        </member>
        <member name="M:ERPConnect.BW.PropertyCollection.Add(ERPConnect.BW.Property)">
            <summary>
            Adds a Property object to the collection
            </summary>
            <param name="NewParameter">The property object to be added</param>
        </member>
        <member name="M:ERPConnect.BW.PropertyCollection.Add(System.String,System.String,System.String)">
            <summary>
            Creates a new Dimension property and adds it to the collection
            </summary>
            <param name="Name">Name of the property</param>
            <param name="Caption">Caption of the property</param>
            <param name="DataType">Data type of the property</param>
            <returns>The newly created Property object</returns>
        </member>
        <member name="M:ERPConnect.BW.PropertyCollection.Contains(System.String)">
            <summary>
            Checks, if there's a property with the name contained in the collection
            </summary>
            <param name="Name">Name of the property</param>
            <returns>true / false</returns>
        </member>
        <member name="P:ERPConnect.BW.PropertyCollection.Item(System.Int32)">
            <summary>
            Returns the property object at the given position
            </summary>
            <param name="Index">The ordinal of the object to be returned</param>
            <returns>The property object</returns>
        </member>
        <member name="P:ERPConnect.BW.PropertyCollection.Item(System.String)">
            <summary>
            Returns the property object with the given name
            </summary>
            <param name="Name">Name of the property to be returned</param>
            <returns>The property object</returns>
        </member>
        <member name="T:ERPConnect.BW.BWVariable">
            <summary>
            A cube's variable
            </summary>
        </member>
        <member name="M:ERPConnect.BW.BWVariable.#ctor">
            <summary>
            Constructs a new BWVariable object
            </summary>
        </member>
        <member name="M:ERPConnect.BW.BWVariable.#ctor(ERPConnect.BW.BWCube,System.String,System.String,System.String,System.Boolean,ERPConnect.BW.BWVariableSelectionType,System.String,ERPConnect.BW.BWVariableType)">
            <summary>
            Constructs a new BWVariable object
            </summary>
            <param name="Cube">Reference to the cube the variable is belonging to</param>
            <param name="Name">Name of the variable</param>
            <param name="Caption">Caption or description of the variable</param>
            <param name="DataType">DataType of the variable</param>
            <param name="Required">Defines if this variable is obligatory or not</param>
            <param name="SelectionType">Defines the type of the variable (complex, single or interval)</param>
            <param name="ReferenceDimensionName">Defines which dimension this variable refers to</param>
            <param name="Type">Defines if the variable is numeric, member or hierarchy</param>
        </member>
        <member name="M:ERPConnect.BW.BWVariable.ToString">
            <summary>
            Converts this object to string
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:ERPConnect.BW.BWVariable.GetMembers(System.Int32,System.Int32)">
            <summary>
            Returns all members of this variable (can be used for designing a value help)
            </summary>
            <param name="StartRow">The row number the selection starts with</param>
            <param name="EndRow">The row number the selection ends with </param>
            <returns>A DataTable that contains the members</returns>
        </member>
        <member name="P:ERPConnect.BW.BWVariable.Cube">
            <summary>
            Reference to the cube the variable is belonging to
            </summary>
        </member>
        <member name="P:ERPConnect.BW.BWVariable.Name">
            <summary>
            Name of the variable
            </summary>
        </member>
        <member name="P:ERPConnect.BW.BWVariable.Caption">
            <summary>
            Caption or description of the variable
            </summary>
        </member>
        <member name="P:ERPConnect.BW.BWVariable.ReferenceDimensionName">
            <summary>
            Defines which dimension this variable refers to
            </summary>
        </member>
        <member name="P:ERPConnect.BW.BWVariable.DataType">
            <summary>
            DataType of the variable
            </summary>
        </member>
        <member name="P:ERPConnect.BW.BWVariable.Required">
            <summary>
            Defines if this variable is obligatory or not
            </summary>
        </member>
        <member name="P:ERPConnect.BW.BWVariable.SelectionType">
            <summary>
            Defines the type of the variable (complex, single or interval)
            </summary>
        </member>
        <member name="P:ERPConnect.BW.BWVariable.Type">
            <summary>
            Defines if the variable is numeric, member or hierarchy
            </summary>
        </member>
        <member name="P:ERPConnect.BW.BWVariable.SingleRange">
            <summary>
            Represents a single range when the selection type is interval or single
            </summary>
        </member>
        <member name="P:ERPConnect.BW.BWVariable.ComplexRanges">
            <summary>
            Represents a collection of ranges when the selection type is complex
            </summary>
        </member>
        <member name="T:ERPConnect.BW.BWVariableCollection">
            <summary>
            A class that holds a set of BWVariable objects
            </summary>
        </member>
        <member name="M:ERPConnect.BW.BWVariableCollection.#ctor">
            <summary>
            Constructs a new BWVariableCollection object
            </summary>
        </member>
        <member name="M:ERPConnect.BW.BWVariableCollection.Add(ERPConnect.BW.BWVariable)">
            <summary>
            Adds a new BWVariable object to the collection
            </summary>
            <param name="NewParameter">A new BWVariable object</param>
        </member>
        <member name="M:ERPConnect.BW.BWVariableCollection.Add(ERPConnect.BW.BWCube,System.String,System.String,System.String,System.Boolean,ERPConnect.BW.BWVariableSelectionType,System.String,ERPConnect.BW.BWVariableType)">
            <summary>
            Adds a new BWVariable object to the collection
            </summary>
            <param name="Cube">Reference to the cube the variable is belonging to</param>
            <param name="Name">Name of the variable</param>
            <param name="Caption">Caption or description of the variable</param>
            <param name="DataType">DataType of the variable</param>
            <param name="Required">Defines if this variable is obligatory or not</param>
            <param name="SelectionType">Defines the type of the variable (complex, single or interval)</param>
            <param name="ReferenceDimensionName">Defines which dimension this variable refers to</param>
            <param name="Type">Defines if the variable is numeric, member or hierarchy</param>
            <returns>The new BWVariable object</returns>
        </member>
        <member name="M:ERPConnect.BW.BWVariableCollection.Insert(System.Int32,ERPConnect.BW.BWVariable)">
            <summary>
            Insert a BWVariable object into the collection at a given index
            </summary>
            <param name="Index">The ordinal number where the BWVariable object is to be inserted at </param>
            <param name="NewParameter">The BWVariable object to be inserted</param>
        </member>
        <member name="M:ERPConnect.BW.BWVariableCollection.ToString">
            <summary>
            Converts the object to a string
            </summary>
            <returns>The string</returns>
        </member>
        <member name="P:ERPConnect.BW.BWVariableCollection.Item(System.Int32)">
            <summary>
            Returns the BWVariable object at a given index
            </summary>
            <param name="Index">The index</param>
            <returns>The BWVariable object a the given position</returns>
        </member>
        <member name="P:ERPConnect.BW.BWVariableCollection.Item(System.String)">
            <summary>
            Returns the BWVariable object with the given name
            </summary>
            <param name="Name">The name of the BWVariable object to be returned</param>
            <returns>The BWVariable object</returns>
        </member>
        <member name="T:ERPConnect.BW.BWVariableSelectionType">
            <summary>
            This enum represents the SelectionType of a BWVariable
            </summary>
        </member>
        <member name="F:ERPConnect.BW.BWVariableSelectionType.Single">
            <summary>
            The Variable consists of a single value
            </summary>
        </member>
        <member name="F:ERPConnect.BW.BWVariableSelectionType.Interval">
            <summary>
            The variable consists of a interval (e.g. MATNR beween '100' and '200')
            </summary>
        </member>
        <member name="F:ERPConnect.BW.BWVariableSelectionType.Complex">
            <summary>
            The variable consists of a complex range (see BWCube.Ranges for details)
            </summary>
        </member>
        <member name="F:ERPConnect.BW.BWVariableSelectionType.MultipleSingle">
            <summary>
            Multiple single values
            </summary>
        </member>
        <member name="T:ERPConnect.BW.BWVariableType">
            <summary>
            This enum represents the type of the variable (Member, Numeric, Hierarchy)
            </summary>
        </member>
        <member name="F:ERPConnect.BW.BWVariableType.Member">
            <summary>
            The variable references to a dimension and only members of this dimension a valid for this variable
            </summary>
        </member>
        <member name="F:ERPConnect.BW.BWVariableType.Numeric">
            <summary>
            The variable is numeric
            </summary>
        </member>
        <member name="F:ERPConnect.BW.BWVariableType.Hierarchy">
            <summary>
            The variable is a hierarchy
            </summary>
        </member>
        <member name="M:ERPConnect.BW.MDXExecuter.#ctor(ERPConnect.R3Connection)">
            <summary>
            Constructs a MDXExecuter object
            </summary>
            <param name="Connection">Reference to a valid R3Connection object</param>
        </member>
        <member name="M:ERPConnect.BW.MDXExecuter.Execute">
            <summary>
            Executes the current MDX statement and fills the Result table
            </summary>
        </member>
        <member name="P:ERPConnect.BW.MDXExecuter.Connection">
            <summary>
            Reference to a valid R3Connection object
            </summary>
        </member>
        <member name="P:ERPConnect.BW.MDXExecuter.MDX">
            <summary>
            MDX statement
            </summary>
        </member>
        <member name="P:ERPConnect.BW.MDXExecuter.UseFormattedValue">
            <summary>
            Defines whether the formatted value or the technical should be used (this can defined in BEX analyzer) 
            </summary>
        </member>
        <member name="P:ERPConnect.BW.MDXExecuter.PackageSize">
            <summary>
            Defines if the result is fetched in more than one data packet (set PackageSize to greater 0 to enable packaging)
            </summary>
        </member>
        <member name="P:ERPConnect.BW.MDXExecuter.Result">
            <summary>
            Contains the resultset of the MDX execution
            </summary>
        </member>
        <member name="P:ERPConnect.BW.MDXExecuter.UnitsInResultset">
            <summary>
            Gets or sets a value indicating whether the units of a measure are output into a separated column in the resultset
            </summary>
        </member>
        <member name="P:ERPConnect.BW.MDXExecuter.UseNewOlapBapis">
            <summary>
            Gets or sets a value indicating whether the new OLAP BAPIs should be used for the extraction (see SAP note 1232751)
            </summary>
        </member>
        <member name="P:ERPConnect.BW.MDXExecuter.MaxRows">
            <summary>
            Number of rows to maximal retrieved.
            </summary>
        </member>
        <member name="E:ERPConnect.BW.MDXExecuter.IncomingPackage">
            <summary>
            IncomingPackage is fired, when addtional data packages are fetched from SAP.
            </summary>
        </member>
        <member name="E:ERPConnect.BW.MDXExecuter.DebuggingDetails">
            <exclude/>
        </member>
        <member name="T:ERPConnect.BW.MDXExecuter.OnIncomingPackage">
            <exclude/>
        </member>
        <member name="T:ERPConnect.BW.MDXExecuter.OnDebuggingDetails">
            <exclude/>
        </member>
        <member name="T:ERPConnect.RFCTYPE">
            <summary>
            Enum which defines all possible RFC-types
            </summary>
        </member>
        <member name="F:ERPConnect.RFCTYPE.CHAR">
            <summary>
            Character field (ABAP type C)
            </summary>
        </member>
        <member name="F:ERPConnect.RFCTYPE.DATE">
            <summary>
            Date field (ABAP type D)
            </summary>
        </member>
        <member name="F:ERPConnect.RFCTYPE.BCD">
            <summary>
            Binary Coded Decimal (ABAP type P)
            </summary>
        </member>
        <member name="F:ERPConnect.RFCTYPE.TIME">
            <summary>
            Time field (ABAP type T) 
            <remarks>These fields are converted into strings like HHMMSS</remarks>
            </summary>
        </member>
        <member name="F:ERPConnect.RFCTYPE.BYTE">
            <summary>
            Raw Bytes 
            </summary>
        </member>
        <member name="F:ERPConnect.RFCTYPE.ITAB">
            <summary>
            Internal table
            </summary>
        </member>
        <member name="F:ERPConnect.RFCTYPE.NUM">
            <summary>
            Numeric type (ABAP type N)
            </summary>
        </member>
        <member name="F:ERPConnect.RFCTYPE.FLOAT">
            <summary>
            Floating point integer (ABAP type F)
            </summary>
        </member>
        <member name="F:ERPConnect.RFCTYPE.INT">
            <summary>
            Integer (ABAP type I)
            </summary>
        </member>
        <member name="F:ERPConnect.RFCTYPE.INT2">
            <summary>
            Integer (2 Bytes)
            </summary>
        </member>
        <member name="F:ERPConnect.RFCTYPE.INT1">
            <summary>
            Integer (1 Byte)
            </summary>
        </member>
        <member name="F:ERPConnect.RFCTYPE.STRUCTURE">
            <summary>
            Complex type (ABAP structure)
            </summary>
        </member>
        <member name="F:ERPConnect.RFCTYPE.XMLDATA">
            <summary>
            XML type
            </summary>
        </member>
        <member name="F:ERPConnect.RFCTYPE.STRING">
            <summary>
            String type
            </summary>
        </member>
        <member name="F:ERPConnect.RFCTYPE.XSTRING">
            <summary>
            XString Type
            </summary>
        </member>
        <member name="P:ERPConnect.RFCAPI.SynchronizationEnabled">
            <summary>
            Gets or sets a value indicating whether parallel calls to the
            classic RFC API are synchronized to prevent resource conflicts.
            <remarks>
                Only change this value if you are experiencing performance issues.
                Do not set this value to false if multiple threads are using ERPConnect.
                Otherwise memory access violations may occur which may corrupt the state of your process.</remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.RFCAPI.RequestWaitTime">
            <summary>
            Gets or sets the time in milliseconds for which the current thread
            sleeps between checks for new RFC requests.
            <remarks>Only change this value if you are experiencing performance issues</remarks>
            </summary>
        </member>
        <member name="T:ERPConnect.Utils.ABAPCode">
            <summary>
            ABAPCode is a class, that can be used to execute ABAP code on the fly and retrieve the result.
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.ABAPCode.#ctor(ERPConnect.R3Connection)">
            <summary> 
            initializes a ABAPCode object that can be used to execute dynmic ABA code
            <param name="Con">A valid SAP connection</param>
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.ABAPCode.#ctor">
            <summary>
            initializes a ABAPCode object that can be used to execute dynmic ABA code
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.ABAPCode.AddCodeLine(System.String)">
            <summary>
            Adds a new line of ABAP code.
            </summary>
            <param name="CodeLine">Line of ABAP code to append</param>
        </member>
        <member name="M:ERPConnect.Utils.ABAPCode.ResetCode">
            <summary>
            Deletes the current code lines.
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.ABAPCode.GetResultLine(System.Int32)">
            <summary>
            Returns a single at the given position  the resultset of the abap report
            </summary>
            <param name="Index">Index of the result line</param>
            <returns>Result line of the report output</returns>
        </member>
        <member name="M:ERPConnect.Utils.ABAPCode.Execute">
             <summary>
             Executes ABAP code on the fly.
             </summary>
             <remarks>
             The following code shows, how to set some ABAP code (located in textBox1), execute it and write the list result in another TextBox. You'll find this samples in the directory AbapPad.
             [C#]
             <code>
                     private void button1_Click(object sender, System.EventArgs e)
                     {
                        ERPConnect.R3Connection con = new ERPConnect.R3Connection();
                        if(!con.AskUserAndOpen(true))
                                        return;
                        ERPConnect.Utils.ABAPCode code = new ERPConnect.Utils.ABAPCode();
                                   
                        code.Connection = con;
                        
                        foreach(string s in textBox1.Lines)
                        code.AddCodeLine(s);
                                    
                        if (code.Execute())
                        {
            				   for(int i=0; i  code.ResultLineCount; i++)
                            textBox2.Text += code.GetResultLine(i) + "\r\n";
                        }
                        else
                            textBox2.Text = "ABAP Error: " + code.LastABAPSyntaxError;
                    }
             </code>
             
             [VB]
             <code>
                  Private Sub button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles button1.Click
                    Dim con As New ERPConnect.R3Connection
                    If Not con.AskUserAndOpen(True) Then
                        Exit Sub
                    End If
             
                    Dim code = New ERPConnect.Utils.ABAPCode
                    code.Connection = con
            
                    Dim s As String
                    For Each s In textBox1.Lines
                        code.AddCodeLine(s)
                    Next
            
                    Dim i As Integer
                    If code.Execute() Then
                        For i = 0 To code.ResultLineCount - 1
                            textBox2.Text += code.GetResultLine(i) + vbCrLf
                        Next
                    Else
                        textBox2.Text = "ABAP Error: " + code.LastABAPSyntaxError
                    End If
                End Sub
             </code>
             </remarks>
             <returns>true / false depends if the program could have been executed without a syntax error.</returns>
        </member>
        <member name="P:ERPConnect.Utils.ABAPCode.ResultLineCount">
            <summary>
            Returns the number of lines that a retrieved a report output.
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.ABAPCode.LastABAPSyntaxError">
            <summary>
            Returns the ABAP error message in case the programm is syntacly incorrect. The method Execute returns false.
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.ABAPCode.Connection">
            <summary>
            The R3Connection object which the ABAPCode object is assigned to.
            </summary>
        </member>
        <member name="T:ERPConnect.BapiReturn">
            <summary>
            Represents a message returned from a BAPI.
            </summary>
        </member>
        <member name="M:ERPConnect.BapiReturn.#ctor">
            <summary>
            Initializes a new BapiReturn object.
            </summary>
        </member>
        <member name="P:ERPConnect.BapiReturn.Type">
            <summary>
            Message type (e.g. W for warning or E for error)
            </summary>
        </member>
        <member name="P:ERPConnect.BapiReturn.Code">
            <summary>
            Message Code
            </summary>
        </member>
        <member name="P:ERPConnect.BapiReturn.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="P:ERPConnect.BapiReturn.LogNumber">
            <summary>
            Log Number
            </summary>
        </member>
        <member name="P:ERPConnect.BapiReturn.LogMessageNumber">
            <summary>
            Number of system log message
            </summary>
        </member>
        <member name="P:ERPConnect.BapiReturn.MessageVariable1">
            <summary>
            Variable contained in the message string
            </summary>
        </member>
        <member name="P:ERPConnect.BapiReturn.MessageVariable2">
            <summary>
            Variable contained in the message string
            </summary>
        </member>
        <member name="P:ERPConnect.BapiReturn.MessageVariable3">
            <summary>
            Variable contained in the message string
            </summary>
        </member>
        <member name="P:ERPConnect.BapiReturn.MessageVariable4">
            <summary>
            Variable contained in the message string
            </summary>
        </member>
        <member name="T:ERPConnect.BapiReturnCollection">
            <summary>
            Collection of BapiReturn objects
            </summary>
        </member>
        <member name="M:ERPConnect.BapiReturnCollection.Add(ERPConnect.BapiReturn)">
            <summary>
            Adds a new BapiReturn object to the collection.
            </summary>
            <param name="NewBapiReturn">The BapiReturn to be aded</param>
        </member>
        <member name="P:ERPConnect.BapiReturnCollection.Item(System.Int32)">
            <summary>
            Returns a BapiReturn object at a given position 
            </summary>
            <param name="Index">Index</param>
            <returns>A single BAPIReturn object</returns>		
        </member>
        <member name="T:ERPConnect.BusinessObjectMethod">
            <summary>
            Represents a single method of a SAP business object. Please use R3Connection.CreateBapi to create a properly defined instance of this class.
            </summary>
        </member>
        <member name="T:ERPConnect.RFCFunction">
            <summary>
            RFCFunction objects represent SAP function modules that can be executed in the SAP system.
            </summary>
        </member>
        <member name="M:ERPConnect.RFCFunction.#ctor(ERPConnect.R3Connection,System.String)">
            <summary>
            Initializes a new RFCFunction object
            </summary>
            <param name="connection">A R3Connection object</param>
            <param name="functionName">The name of the function module</param>
        </member>
        <member name="M:ERPConnect.RFCFunction.#ctor(System.String)">
            <summary>
            Initializes a new RFCFunction object
            </summary>
            <param name="functionName">The name of the function module</param>
        </member>
        <member name="M:ERPConnect.RFCFunction.Execute">
            <summary>
            Excecutes the function module
            </summary>
        </member>
        <member name="M:ERPConnect.RFCFunction.Execute(System.Byte[])">
            <summary>
            Executes a function in tRFC context. No import parameters are passed back to the calling program
            </summary>
            <param name="tid">Transaction ID</param>
        </member>
        <member name="M:ERPConnect.RFCFunction.Execute(System.String)">
            <summary>
            Executes a function in tRFC context. No import parameters are passed back to the calling program
            </summary>
            <param name="tid">Transaction ID</param>
        </member>
        <member name="M:ERPConnect.RFCFunction.CallClassicAPI">
            <summary>
            Uses RfcCallEx and RfcReceiveEx instead of RfcCallReceiveEx
            to support all types of Changing parameters.
            </summary>
        </member>
        <member name="M:ERPConnect.RFCFunction.SaveToXML(System.Xml.XmlWriter)">
            <summary>
            Saves the RFCFunction object to XML
            </summary>
            <param name="writer">XmlWriter object for writing the XML</param>
        </member>
        <member name="M:ERPConnect.RFCFunction.SaveToXML(System.String)">
            <summary>
            Saves the RFCFunction object to XML
            </summary>
            <param name="Filename">Path to the destination file</param>
        </member>
        <member name="M:ERPConnect.RFCFunction.SaveToXML">
            <summary>
            Saves the RFCFunction object to XML
            </summary>
            <returns>String which contains the XML</returns>
        </member>
        <member name="M:ERPConnect.RFCFunction.LoadFromXML(System.Xml.XmlReader)">
            <summary>
            Loads the RFCFunction object from XML
            </summary>
            <param name="reader">XmlReader object for reading the XML</param>
        </member>
        <member name="M:ERPConnect.RFCFunction.LoadFromXML(System.String)">
            <summary>
            Loads the RFCFunction object from XML
            </summary>
            <param name="FileName">Path to the source file</param>
        </member>
        <member name="M:ERPConnect.RFCFunction.LoadFromXML(System.IO.TextReader)">
            <summary>
            Loads the RFCFunction object from XML
            </summary>
            <param name="reader">StreamReader object for reading the XML</param>
        </member>
        <member name="M:ERPConnect.RFCFunction.LoadFromXMLString(System.String)">
            <summary>
            Loads the RFCFunction object from a string which contains XML 
            </summary>
            <param name="XMLString">String which contains the XML</param>
        </member>
        <member name="P:ERPConnect.RFCFunction.Imports">
            <summary>
            Returns a RFCParamter collction which represents the import parameters to be exchanged with the SAP system
            </summary>
        </member>
        <member name="P:ERPConnect.RFCFunction.Exports">
            <summary>
            Returns a RFCParamter collection which represents the export parameters to be exchanged with the SAP system
            </summary>
        </member>
        <member name="P:ERPConnect.RFCFunction.Changings">
            <summary>
            Returns a RFCParamter collection which represents the export parameters to be exchanged with the SAP system
            </summary>
        </member>
        <member name="P:ERPConnect.RFCFunction.Tables">
            <summary>
            Returns a RFCTable collection which represents the tables to be exchanged with the SAP system
            </summary>
        </member>
        <member name="P:ERPConnect.RFCFunction.Name">
            <summary>
            Gets / sets the name of the function module
            </summary>
        </member>
        <member name="P:ERPConnect.RFCFunction.Connection">
            <summary>
            Gets / sets the R3Connection object which is assigned to the function
            </summary>
        </member>
        <member name="P:ERPConnect.RFCFunction.SendHttpCommitWork">
            <summary>
            Set this property to true, if you call a function via SOAP that needs a commit within the same call or transaction
            </summary>
        </member>
        <member name="P:ERPConnect.RFCFunction.CallBackServer">
            <summary>
            RFCServer object for callback functionality during an RFC function (Destination 'BACK', see ABAP manual for details)
            </summary>
        </member>
        <member name="M:ERPConnect.BusinessObjectMethod.#ctor(ERPConnect.R3Connection)">
            <summary>
            Initializes an BusinessObjectMethod
            </summary>
            <param name="Connection">R3Connection object</param>
        </member>
        <member name="M:ERPConnect.BusinessObjectMethod.Execute">
            <summary>
            Exectutes the BAPI
            </summary>
        </member>
        <member name="M:ERPConnect.BusinessObjectMethod.CommitWork(System.Boolean)">
            <summary>
            Execute external Commit when using BAPIs (only few BAPIs need this function)
            </summary>
            <param name="Wait">Wait until Commit is processed</param>
        </member>
        <member name="M:ERPConnect.BusinessObjectMethod.RollbackWork">
            <summary>
            Execute external Rollback when using BAPIs (only few BAPIs support this function)
            </summary>
        </member>
        <member name="P:ERPConnect.BusinessObjectMethod.ObjectName">
            <summary>
            The Name of the SAP Business Object
            </summary>
        </member>
        <member name="P:ERPConnect.BusinessObjectMethod.MethodName">
            <summary>
            The Name of the Method of the SAP Business Object
            </summary>
        </member>
        <member name="P:ERPConnect.BusinessObjectMethod.Returns">
            <summary>
            Rteurns a collection of BapiReturn object that represent all the BAPI return messages.
            </summary>
        </member>
        <member name="T:ERPConnect.ClientProtocol">
            <summary>
            Enum for possible client protcols
            </summary>
        </member>
        <member name="F:ERPConnect.ClientProtocol.RFC">
            <summary>
            RFC protocol, classic API
            </summary>
        </member>
        <member name="F:ERPConnect.ClientProtocol.HttpSoap">
            <summary>
            SOAP over HTTP
            </summary>
        </member>
        <member name="F:ERPConnect.ClientProtocol.NWRFC">
            <summary>
            RFC protocol, NetWeaver API
            </summary>
        </member>
        <member name="T:ERPConnect.R3Connection">
            <summary>
            R3Connection represents an connection to an SAP R/3 System
            </summary>
        </member>
        <member name="M:ERPConnect.R3Connection.#ctor">
            <summary>
            Initializes a new instance of the R3Connection class
            </summary>
        </member>
        <member name="M:ERPConnect.R3Connection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the R3Connection class and sets the connection string
            </summary>
            <param name="connectionString">Logon connection string</param>
        </member>
        <member name="M:ERPConnect.R3Connection.#ctor(System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the R3Connection class and sets the logon data for a single application server
            </summary>
            <param name="host">Host name of the application server</param>
            <param name="systemNumber">System number of the application server</param>
            <param name="userName">Logon name</param>
            <param name="password">Logon password</param>
            <param name="language">Logon language</param>
            <param name="client">Logon client</param>
        </member>
        <member name="M:ERPConnect.R3Connection.#ctor(System.String,System.Int32,ERPConnect.SNCSettings,System.String,System.String)">
            <summary>
            Initializes a new instance of the R3Connection class and sets the logon data for a single application server with SNC authentication
            </summary>
            <param name="host">Host name of the application server</param>
            <param name="systemNumber">System number of the application server</param>
            <param name="sncSettings">Settings for SNC</param>
            <param name="language">Logon language</param>
            <param name="client">Logon client</param>
        </member>
        <member name="M:ERPConnect.R3Connection.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the R3Connection class sets the logon data for an SAP Web Application Server
            </summary>
            <param name="httpUrl">URL to the SAP Web Application Server, e.g. http://_YourHost_:_YourPort_/sap/bc/soap/rfc</param>
            <param name="userName">Logon name</param>
            <param name="password">Logon password</param>
            <param name="language">Logon language</param>
            <param name="client">Logon client</param>
        </member>
        <member name="M:ERPConnect.R3Connection.GetConnectionStringParameterValue(System.String,System.String)">
            <summary>
            Extracts the value of a parameter from a connection string
            </summary>
            <param name="connectionString">The connection string from which the value should be extracted</param>
            <param name="parameterName">The name of the paramter of which the value should be extracted</param>
            <returns>The value of the parameter</returns>
        </member>
        <member name="M:ERPConnect.R3Connection.Open">
            <summary>
            Opens a connection to an SAP R/3 system. For opening via Load Balancing please set UsesLoadBalancing = true
            </summary>
        </member>
        <member name="M:ERPConnect.R3Connection.Open(System.Boolean)">
            <summary>
            Opens a connection to an SAP R/3 system.
            </summary>
            <param name="useLoadBalancing">true -> use Load Balancing (MessageServer, SID and GroupName are required)
            false -> use logon to a single application server (Host and SystemNumber are required</param>
        </member>
        <member name="M:ERPConnect.R3Connection.Open(System.String)">
            <summary>
            Opens a connection to an SAP R/3 system.
            </summary>
            <param name="rfcConnectionString">Connection String</param>
        </member>
        <member name="M:ERPConnect.R3Connection.Close">
            <summary>
            Closes the client connection
            </summary>
        </member>
        <member name="M:ERPConnect.R3Connection.OpenSSO(System.String,System.Boolean)">
            <summary>
            Opens a connection with a SSO ticket instead of user credentials
            </summary>
            <param name="SSOTicket">SSO ticket</param>
            <param name="UseLoadBalancing">true to enable load balancing</param>
        </member>
        <member name="M:ERPConnect.R3Connection.OpenSSO(System.String)">
            <summary>
            Opens a connection with a SSO ticket instead of user credentials
            </summary>
            <param name="SSOTicket">SSO ticket</param>
        </member>
        <member name="M:ERPConnect.R3Connection.GetSSOTicket(System.Boolean)">
            <summary>
            Logs on to SAP with the given user credentials and returns an SSO ticket
            </summary>
            <param name="UseLoadBalancing">true / false depending if you want load balancing</param>
            <returns></returns>
        </member>
        <member name="M:ERPConnect.R3Connection.GetSSOTicket">
            <summary>
            Logs on to SAP with the given user credentials and returns an SSO ticket
            </summary>
            <returns>SSO ticket</returns>
        </member>
        <member name="M:ERPConnect.R3Connection.CreateFunction(System.String)">
            <summary>
            Creates a function by the name of the SAP function module
            </summary>
            <param name="Name">Name of the function module</param>
            <returns>A RFCFunction object</returns>
            <remarks>The following example demonstrates, how to logon, to create a function object and to execute the function</remarks>
            <example>
            
            [C#]
            <code>
            static void Main(string[] args)
            	{
            	
            			R3Connection con = new R3Connection("hamlet",11,"theobald","pw","DE","800");
            			con.Open(false);
            			
            			// Create a function object
            			RFCFunction func = con.CreateFunction("RFC_CUSTOMER_GET");
            				
            			Console.WriteLine("Please enter cutomer number ...");
            			Console.WriteLine("(and do not forget the leading zeros ...");
            	
            			// fill the export paramater
            			StringBuilder CustomerNo =  new StringBuilder(Console.ReadLine());
            			func.Exports["KUNNR"].ParamValue = CustomerNo.ToString();
            	
            			try 
            	{
            			func.Execute();
            		}
            		catch (ERPException e)
            	{
            		Console.WriteLine(e.Message);
            		Console.ReadLine();
            		return;
            	}
            	
            		// Output the result of the function module
            		Console.WriteLine("Name of customer:");
            		Console.WriteLine(func.Tables["CUSTOMER_T"].Rows[0,"NAME1"]);
            		Console.ReadLine();
            	}
            </code>
            
            [VB]
            <code>
                Sub Main()
                        Dim con As New R3Connection("hamlet", 11, "theobald", "pw", "DE", "800")
                        con.Open(False)
                
                        ' Create a function object
                        Dim func = con.CreateFunction("RFC_CUSTOMER_GET")
                
                        Console.WriteLine("Please enter cutomer number ...")
                        Console.WriteLine("(and do not forget the leading zeros ...")
                
                        ' fill the export paramater
                        Dim CustomerNo As New StringBuilder(Console.ReadLine())
                        func.Exports("KUNNR").ParamValue = CustomerNo.ToString()
                
                        Try
                            func.Execute()
                        Catch e As ERPException
                            Console.WriteLine(e.Message)
                            Console.ReadLine()
                            Return
                        End Try
                
                        ' Output the result of the function module
                        Console.WriteLine("Name of customer:")
                        Console.WriteLine(func.Tables("CUSTOMER_T").Rows(0, "NAME1"))
                        Console.ReadLine()
                    End Sub
            </code>
            </example>
        </member>
        <member name="M:ERPConnect.R3Connection.CreateBapi(System.String,System.String)">
             <summary>
             Creates a new BusinessObjectMethod object.
             </summary>
             <param name="BusinessObjectName">Name of the Business Object. case-sensitiv</param>
             <param name="MethodName">Name of Business Object's method. case-sensitiv</param>
             <returns>A BusinessObjectMethod object</returns>
             <remarks>
             Please go to folder BAPIGetQty in your Examples folder for example source code. 
            </remarks>
        </member>
        <member name="M:ERPConnect.R3Connection.CreateQuery(ERPConnect.Queries.WorkSpace,System.String,System.String)">
            <summary>
            Creates a new Query object
            </summary>
            <param name="WorkSpace">Workspace local / global</param>
            <param name="UserGroup">Name of user group</param>
            <param name="QueryName">Name of query</param>
            <returns>The new created Query object</returns>
        </member>
        <member name="M:ERPConnect.R3Connection.CreateBWCube(System.String)">
            <summary>
            Creates a new BWCube object. Please refer to the manual for a sample
            </summary>
            <param name="CubeName">Name of BW cube or BW query</param>
            <returns>The created BWCube object</returns>
        </member>
        <member name="M:ERPConnect.R3Connection.CreateIdoc(System.String,System.String)">
            <summary>
            Creates a fully initialized Idoc object ready to send ...
            </summary>
            <param name="IdocType">Name of the Idoc type (e.g. MATMAS01)</param>
            <param name="Enhancement">Name of the Idoc enhancement (may be empty is no enhancement is needed)</param>
            <returns>A new Idoc object ready for use</returns>
        </member>
        <member name="M:ERPConnect.R3Connection.CreateEmptyIdoc(System.String,System.String)">
            <summary>
            Creates an Idoc object. The segments are empty and have to be filled. Therefor use Idoc.CreateSegment
            </summary>
            <param name="IdocType">Name of the Idoc type (e.g. MATMAS01)</param>
            <param name="Enhancement">Name of the Idoc enhancement (may be empty if no enhancement is needed)</param>
            <returns>An emtpy Idoc object</returns>
        </member>
        <member name="M:ERPConnect.R3Connection.Ping">
            <summary>
            Checks, whether the established connection is available
            </summary>
            <returns>true / false, no exception is thrown</returns>
        </member>
        <member name="M:ERPConnect.R3Connection.SetAbapDebug(System.Boolean)">
            <summary>
            Switches the ABAP debug mode to on or off. Please use this method directly before calling Execute of the RFCFunction method.
            </summary>
            <param name="value">true / false</param>
        </member>
        <member name="M:ERPConnect.R3Connection.CreateTID">
            <summary>
            Creates a new transaction ID
            </summary>
            <returns>New transaction ID</returns>
        </member>
        <member name="M:ERPConnect.R3Connection.ConfirmTID(System.String)">
            <summary>
            Confirms a Transaction ID
            </summary>
            <param name="tid">Transaction ID</param>
        </member>
        <member name="M:ERPConnect.R3Connection.ConfirmTID(System.Byte[])">
            <summary>
            Confirms a Transaction ID
            </summary>
            <param name="tid">Transaction ID</param>
        </member>
        <member name="M:ERPConnect.R3Connection.IsSystemEditable">
            <summary>
            Checks, whether dynamic ABAP code can be executed.
            </summary>
            <returns>true / false</returns>
        </member>
        <member name="M:ERPConnect.R3Connection.Log(System.String)">
            <summary>
            This function can be used to access the internal log mechanism
            </summary>
            <param name="message">Message to be logged</param>
        </member>
        <member name="M:ERPConnect.R3Connection.AllowStartProgram(System.String)">
            <summary>
            This is a list of programs which can be started by the RFC library by the RFC partner if required. 
            </summary>
            <param name="programList">A program name can have max. 512 B. They must be separated by ;. : any program is allowed.</param>
        </member>
        <member name="M:ERPConnect.R3Connection.Clone">
            <summary>
            Clones the connection object, but doesn't open it!!!! Please use Open() to open it
            </summary>
            <returns>The cloned R3Connection object</returns>
        </member>
        <member name="M:ERPConnect.R3Connection.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the ERPConnect.R3Connection and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources</param>
        </member>
        <member name="P:ERPConnect.R3Connection.RFCHandle">
            <summary>
            Internal handle to the RFC connection
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.MultithreadingEnvironment">
            <summary>
            Get or sets a value which indicates whether multiple threads
            are using this connection instance.
            <remarks>
                Only change this value if you are experiencing performance issues.
                Do not set this value to false if multiple threads are using this connection instance.
                Otherwise memory access violations may occur which may corrupt the state of your process.
            </remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.Protocol">
            <summary>
            Get / sets the protocol for the communication between client and SAP server
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.ConnectionString">
            <summary>
            SAP Connection String
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.Host">
            <summary>
            Gets / sets the host name
            <remarks>only rquired when using logon to a single application server</remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.SystemNumber">
            <summary>
            Gets / sets the system number 
            <remarks>only rquired when using logon to a single application server</remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.UsesLoadBalancing">
            <summary>
            Gets or sets a value indicating whether load balancing is used or not
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.MessageServer">
            <summary>
            Gets / sets the SAP message server 
            <remarks>Required for logon via load balancing</remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.SID">
            <summary>
            Gets / sets SAP System ID
            <remarks>only rquired when using logon by load balancing</remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.LogonGroup">
            <summary>
            Gets / sets the logon group
            <remarks>only rquired when using logon by load balancing</remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.HttpUrl">
            <summary>
            Gets / sets the URL to the SAP Web Application Server, e.g. http://_YourHost_:_YourPort_/sap/bc/soap/rfc
            <remarks>e.g. DE od EN</remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.HttpProxy">
            <summary>
            Gets / sets the proxy server which is used for http communication
            <remarks>-</remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.HttpProxyUserName">
            <summary>
            Gets / sets the user's name when connecting through a proxy server
            <remarks>-</remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.HttpProxyPassword">
            <summary>
            Gets / sets the user's password when connecting through a proxy server
            <remarks>-</remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.HttpTimeout">
            <summary>
            Gets / sets the timeout period for hhtp connections
            <remarks>-</remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.UserName">
            <summary>
            Gets / sets the user name
            <remarks>-</remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.Password">
            <summary>
            sets the user's password
            <remarks>-</remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.SNCSettings">
            <summary>
            Gets or sets the settings for SNC
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.Client">
            <summary>
            Gets / sets the logon client
            <remarks>-</remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.Language">
            <summary>
            Gets / sets the logon language
            <remarks>e.g. DE od EN</remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.UseGui">
            <summary>
            Defines whether the SAP GUI should be used
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.SAPEncodingInfo">
            <summary>
            Gets information about data encoding
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.IsUnicode">
            <summary>
            Defines whether the partner system is a unicode system
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.Codepage">
            <summary>
            Returns the Codepage
            <remarks>-</remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.KernelRelease">
            <summary>
            Returns the kernel release number of the SAP system
            <remarks>e.g. 700</remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.PartnerRelease">
            <summary>
            Returns the release number of the SAP-BASIS of the system
            <remarks>e.g. 700</remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.SkipGetSystemInfo">
            <summary>
            Gets or sets a value which indicates whether details about the SAP system 
            are obtained through an RFC function call, if necessecary. Do only set to true, if there's no other way.
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.Logging">
            <summary>
            Gets or sets a value which indicates whether detailed RFC tracing is enabled or not
            <remarks>
            This property must be set before the connection is opened.
            LogDir must also be set.
            </remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.LogDir">
            <summary>
            Gets or sets the path to the directory in which trace files and XML log files are stored
            <remarks>
            To enable logging, set the value to an existing directory to which the process has write access. 
            To disable logging set the value to string.Empty.
            This property must be set before the connection is opened.
            </remarks>
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.DynamicABAPCustomFunction">
            <summary>
            Sets the name of the function module which is used by the ABAPCode class
            </summary>
        </member>
        <member name="P:ERPConnect.R3Connection.CacheMetadata">
            <summary>
            Get / sets if the meta data of functions, queries etc. is stored and receycled when a new Create... statement is called.
            </summary>
        </member>
        <member name="T:ERPConnect.SNCMechanism">
            <summary>
            Specifies the GSSAPI mechanism for SNC connections
            </summary>
        </member>
        <member name="F:ERPConnect.SNCMechanism.NTLM">
            <summary>
            NTLM Security Service Provider
            </summary>
        </member>
        <member name="F:ERPConnect.SNCMechanism.Kerberos5">
            <summary>
            Kerberos 5 Security Service Provider
            </summary>
        </member>
        <member name="T:ERPConnect.SNCQualityOfProtection">
            <summary>
            Specifies the quality of protection (security level) for SNC connections
            </summary>
        </member>
        <member name="F:ERPConnect.SNCQualityOfProtection.Undefined">
            <summary>
            QoP is undefined
            </summary>
        </member>
        <member name="F:ERPConnect.SNCQualityOfProtection.Authentication">
            <summary>
            Authentication only
            </summary>
        </member>
        <member name="F:ERPConnect.SNCQualityOfProtection.Integrity">
            <summary>
            Integrity protection
            </summary>
        </member>
        <member name="F:ERPConnect.SNCQualityOfProtection.Privacy">
            <summary>
            Privacy protection 
            </summary>
        </member>
        <member name="F:ERPConnect.SNCQualityOfProtection.Default">
            <summary>
            Default protection
            </summary>
        </member>
        <member name="F:ERPConnect.SNCQualityOfProtection.Maximum">
            <summary>
            Maximum available protection
            </summary>
        </member>
        <member name="T:ERPConnect.SNCSettings">
            <summary>
            Represents settings for SNC connections
            </summary>
        </member>
        <member name="P:ERPConnect.SNCSettings.PartnerName">
            <summary>
            Gets or sets the SNC partner name
            </summary>
        </member>
        <member name="P:ERPConnect.SNCSettings.OwnName">
            <summary>
            Gets or sets the own SNC name
            </summary>
        </member>
        <member name="P:ERPConnect.SNCSettings.LibraryPath">
            <summary>
            Gets or sets the path to the SNC DLL
            </summary>
        </member>
        <member name="P:ERPConnect.SNCSettings.Enabled">
            <summary>
            Gets or sets a value indicating whether SNC is used or not
            </summary>
        </member>
        <member name="P:ERPConnect.SNCSettings.Mechanism">
            <summary>
            Gets or sets the GSS-API mechansim used for SNC connections
            </summary>
        </member>
        <member name="P:ERPConnect.SNCSettings.QualityOfProtection">
            <summary>
            Gets or sets the preferred quality of protection (security level) for SNC connections
            </summary>
        </member>
        <member name="T:ERPConnect.ConversionUtils">
            <summary>
            Several static routines for format conversion
            </summary>
        </member>
        <member name="M:ERPConnect.ConversionUtils.NetDate2SAPDate(System.DateTime)">
            <summary>
            Converts a System.DateTime object to a SAP date field 
            </summary>
            <param name="Date">System.DateTime object to convert</param>
            <returns>Date YYYYMMDD</returns>
        </member>
        <member name="M:ERPConnect.ConversionUtils.SAPDate2NetDate(System.String)">
            <summary>
            Converts a SAP date field to a System.DateTime object
            </summary>
            <param name="Date">Date YYYYMMDD</param>
            <returns>Converted System.DateTime</returns>
        </member>
        <member name="M:ERPConnect.Converts.TrimEndSpace(System.String)">
            <summary>
            Performance optimized method for removing spaces from the end of a string
            </summary>
            <param name="s">string to remove spaces from</param>
            <returns>s with spaces removed from the end</returns>
        </member>
        <member name="T:ERPConnect.ERPException">
            <summary>
            ERPException class
            </summary>
        </member>
        <member name="F:ERPConnect.ERPException.ABAPException">
            <summary>
            The original ABAP Exception
            </summary>
        </member>
        <member name="M:ERPConnect.ERPException.#ctor">
            <summary>
            Initializes a new instance of the ERPException class.
            </summary>
        </member>
        <member name="M:ERPConnect.ERPException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ERPException class.
            </summary>
            <param name="message">Plain message</param>
            <param name="AbapException">ABAP exception (e.g. TABLE_NOT_FOUND)</param>
        </member>
        <member name="M:ERPConnect.ERPException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ERPException class.
            </summary>
            <param name="message">Plain message</param>
            <param name="InnerException">InnerException</param>
        </member>
        <member name="M:ERPConnect.ERPException.#ctor(System.String,System.Exception,System.String)">
            <summary>
            Initializes a new instance of the ERPException class.
            </summary>
            <param name="message">Plain message</param>
            <param name="InnerException">InnerException</param>
            <param name="AbapException">ABAP exception (e.g. TABLE_NOT_FOUND)</param>
        </member>
        <member name="M:ERPConnect.ERPException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ERPException class.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="T:ERPConnect.Idocs.Idoc">
            <summary>
            Represents a single IDoc including its segments
            </summary>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.#ctor">
            <summary>
            Initializes an empty Idoc object
            </summary>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.#ctor(System.String,System.String)">
            <summary>
            initializes an empty Idoc object
            </summary>
            <param name="IdocType">Name of the idoc type</param>
            <param name="Extension">Name of the extension. If no extension is requiered, set to ""</param>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.Send(System.String)">
            <summary>
            Sends the Idoc to the SAP system wihtin a tRFC context of the given TID
            </summary>
            <param name="TID">Transaction ID</param>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.Send(System.Byte[])">
            <summary>
            Sends the Idoc to the SAP system wihtin a tRFC context of the given TID
            </summary>
            <param name="TID">Transaction ID</param>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.Send">
            <summary>
            Sends the Idoc to the SAP system
            </summary>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.SendAndWait">
            <summary>
            Sends the IDocs and waits until the IDocs is processed. You can call GetCurrentStatus after SendAndWait()
            </summary>
            <returns>IDoc is processed succesfully true/false</returns>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.GetCurrentStatus">
            <summary>
            Returns an IdocStatus object which represents the current status of the IDoc
            </summary>
            <returns>IdocStatus object</returns>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.ToString">
            <summary>
            Returns the idoc as string for debugging purpose
            </summary>
            <returns>Idoc as string</returns>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.CreateSegment(System.String)">
            <summary>
            Creates a new segment with fields to be filled with data.
            </summary>
            <param name="SegmentName">Name of the segment. Please refer to transaction WE60 to find out which segments kann be used for the idoc type.</param>
            <returns>A newly created IdocSegment object</returns>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.LoadIdocSchema(System.String)">
            <summary>
            Loads a schema file and stores the segments internally for further use (e.g. for the CreateSegment method)
            </summary>
            <param name="SchemaFileName">Filename</param>
            <remarks>Please use the IDocSchemaGenerator tool that is included in the ERPConnect installation package</remarks>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.LoadIdocSchema(System.IO.StreamReader)">
            <summary>
            Loads a schema file and stores the segments internally for further use (e.g. for the CreateSegment method)
            </summary>
            <param name="IdocSchemaStreamReader">StreamReader object that points to an resource file</param>
            <remarks>Please use the IDocSchemaGenerator tool that is included in the ERPConnect installation package</remarks>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.LoadIdocSchema(System.IO.TextReader)">
            <summary>
            Loads a schema and stores the segments internally for further use (e.g. for the CreateSegment method)
            </summary>
            <param name="TextReader">TextReader</param>
            <remarks>Please use the IDocSchemaGenerator tool that is included in the ERPConnect installation package</remarks>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.SaveIdocSchema(System.String)">
            <summary>
            Saves the schema file of this IDoc type and enhancement to a file
            </summary>
            <param name="SchemaFileName"></param>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.SaveIdocSchema(System.Xml.XmlWriter)">
            <summary>
            Saves the schema file of this IDoc type and enhancement to a XmlWriter object
            </summary>
            <param name="XmlWriter"></param>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.LoadXMLData(System.String)">
             <summary>
             Loads a XML IDoc data file.
             </summary>
             <param name="IdocFile">Filename</param>
             <remarks>
             Please make sure to use LoadIdocSchema or RFCConnection.CreateEmptyIdoc before loading the IDoc data.
             It is not possible to load data without having defined the segments:
             <code>
             R3Connection con = new R3Connection("hamlet",90,"RFCTestUser","pass01","DE","800");
             con.Open(false);
            
             Idoc i = new Idoc();
            	i.Connection = con;
            
            	i.LoadIdocSchema(@"c:\ORDERS01.xsd");
            	i.LoadData(@"c:\Order.xml");
            		
            	i.Send();
            
            	con.Close();
             </code>
             </remarks>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.LoadXMLData(System.IO.TextReader)">
            <summary>
            Loads a XML IDoc data file.
            </summary>
            <param name="IdocFileTextReader">XML TextReader</param>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.SaveXMLData(System.IO.TextWriter)">
            <summary>
            Saves the IDoc to an XML file (including all segments)
            </summary>
            <param name="IdocFileTextWriter">TextWriter</param>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.SaveXMLData(System.String)">
            <summary>
            Saves the IDoc to an XML file (including all segments)
            </summary>
            <param name="IdocFileName">Filename and path</param>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.SaveXMLData(System.String,System.String)">
            <summary>
            Saves the IDoc to an XML file (including all segments)
            </summary>
            <param name="IdocFileName">Filename and path</param>
            /// <param name="XMLEncoding">XML Encoding e.g. ISO-8859-1 </param>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.SavePlainData(System.IO.StreamWriter)">
            <summary>
            Writes the whole IDoc to a single file
            </summary>
            <param name="writer">A StreamWriter object</param>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.SavePlainData">
            <summary>
            Writes the whole IDoc to a single file
            </summary>
            <param name="FileName">Filename</param>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.SavePlainData(System.String)">
            <summary>
            Writes the whole IDoc to a single file
            </summary>
            <param name="FileName">Filename</param>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.SavePlainData(System.String,System.Text.Encoding)">
            <summary>
            Writes the whole IDoc to a single file
            </summary>
            <param name="FileName">Filename</param>
            <param name="Encoding">Encoding</param>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.LoadPlainData(System.IO.StreamReader)">
            <summary>
            Loads IDoc from a single plain file. You must make sure to have a shema loaded before calling this function
            </summary>
            <param name="strm">A StreamReader object</param>
        </member>
        <member name="M:ERPConnect.Idocs.Idoc.LoadPlainData(System.String)">
            <summary>
            Loads IDoc from a single plain file. You must make sure to have a shema loaded before calling this function
            </summary>
            <param name="FileName">Filename</param>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.SkipHLevel">
            <summary>
            DO NOT USE!!!! FOR INTERNAL USE ONLY!!!
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.Segments">
            <summary>
            Collection of all segment that are child relation to the current segment
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.Connection">
            <summary>
            R3Connection object to which the Idoc will be sended
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.LastTID">
            <summary>
            Transaction ID of last outbound call
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.TABNAM">
            <summary>
            Name of table structure
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.MANDT">
            <summary>
            Client
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.DOCNUM">
            <summary>
            IDoc number
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.DOCREL">
            <summary>
            SAP Release for IDoc
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.STATUS">
            <summary>
            Status of IDoc
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.DIRECT">
            <summary>
            Direction
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.OUTMOD">
            <summary>
            Output mode
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.EXPRSS">
            <summary>
            Overriding in inbound processing
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.TEST">
            <summary>
            Test flag
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.IDOCTYP">
            <summary>
            Name of basic type
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.CIMTYP">
            <summary>
            Extension (defined by customer)
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.MESTYP">
            <summary>
            Message type
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.MESCOD">
            <summary>
            Message code
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.MESFCT">
            <summary>
            Message function
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.STD">
            <summary>
            EDI standard, flag
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.STDVRS">
            <summary>
            EDI standard, version and release
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.STDMES">
            <summary>
            EDI message type
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.SNDPOR">
            <summary>
            Sender port (SAP System, external subsystem)
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.SNDPRT">
            <summary>
            Partner type of sender
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.SNDPFC">
            <summary>
            Partner Function of Sender
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.SNDPRN">
            <summary>
            Partner Number of Sender
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.SNDSAD">
            <summary>
            Sender address (SADR)
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.SNDLAD">
            <summary>
            Logical address of sender
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.RCVPOR">
            <summary>
            Receiver port
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.RCVPRT">
            <summary>
            Partner Type of receiver
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.RCVPFC">
            <summary>
            Partner function of recipient
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.RCVPRN">
            <summary>
            Partner number of recipient
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.RCVSAD">
            <summary>
            Recipient address (SADR)
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.RCVLAD">
            <summary>
            Logical address of recipient
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.CREDAT">
            <summary>
            Created on
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.CRETIM">
            <summary>
            Time Created
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.REFINT">
            <summary>
            Transmission file (EDI Interchange)
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.REFGRP">
            <summary>
            Message group (EDI Message Group)
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.REFMES">
            <summary>
            Message (EDI Message)
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.ARCKEY">
            <summary>
            Key for external message archive
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.SERIAL">
            <summary>
            Serialization
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.Idoc.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="T:ERPConnect.Idocs.IdocSegment">
            <summary>
            Represent a single IDoc segment with all its child segments
            </summary>
        </member>
        <member name="M:ERPConnect.Idocs.IdocSegment.ReadDataBuffer(System.Int32,System.Int32)">
            <summary>
            Returns a part of the data buffer of a given length and a given position
            </summary>
            <param name="Offset">Offset where to read in the data buffer</param>
            <param name="Length">Length of the string</param>
            <returns>A string that contains tha part of data buffer</returns>
        </member>
        <member name="M:ERPConnect.Idocs.IdocSegment.WriteDataBuffer(System.String,System.Int32,System.Int32)">
            <summary>
            Writes as string at a given position into the Idoc data buffer
            </summary>
            <param name="Content">The string to be written</param>
            <param name="Offset">The offset in the buffer where the string should be placed</param>
            <param name="Length">The length of the string</param>
        </member>
        <member name="M:ERPConnect.Idocs.IdocSegment.ToString">
            <summary>
            Returns a string for debugging purpose
            </summary>
            <returns>-</returns>
        </member>
        <member name="M:ERPConnect.Idocs.IdocSegment.Clone">
            <summary>
            Creates a cloned IdocSegment object
            </summary>
            <returns>A new IdocSegment object</returns>
        </member>
        <member name="P:ERPConnect.Idocs.IdocSegment.ChildSegments">
            <summary>
            Collection of all segment that are child relation to the current segment
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.IdocSegment.HasChildren">
            <summary>
            True / false whether child segments are existing
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.IdocSegment.SegmentType">
            <summary>
            The type name for this segment
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.IdocSegment.SegmentName">
            <summary>
            The DDIC type for this segment
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.IdocSegment.Description">
            <summary>
            A short description of the segment
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.IdocSegment.Fields">
            <summary>
            Fields represent the values and other Properties of the fields that are contained in one segment
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.IdocSegment.MaxOccur">
            <summary>
            Defines how often a segment can occur
            </summary>
        </member>
        <member name="T:ERPConnect.Idocs.IdocSegmentCollection">
            <summary>
            Represents a collection over several IdocSegment objects which are related to each other.
            </summary>
        </member>
        <member name="M:ERPConnect.Idocs.IdocSegmentCollection.Add(ERPConnect.Idocs.IdocSegment)">
            <summary>
            Adds a new segment object to the collection.
            </summary>
            <param name="NewSegment">The segment to be aded</param>
        </member>
        <member name="P:ERPConnect.Idocs.IdocSegmentCollection.Item(System.Int32)">
            <summary>
            Returns a IdocSegment object at a given position
            </summary>
            <param name="Index">Position of the requiered IdocSegment object in the collection</param>		
        </member>
        <member name="P:ERPConnect.Idocs.IdocSegmentCollection.Item(System.String,System.Int32)">
            <summary>
            Returns a IdocSegment object by providing the name of the segment. Attention!! The name may be not unique, so an Index must by provided to.
            </summary>
            <param name="SegmentName">Name of the segment</param>
            <param name="Index">Position of the requiered IdocSegment object based on the numbers of all segments with the given name</param>
        </member>
        <member name="T:ERPConnect.Idocs.IdocSegmentField">
            <summary>
            Represent a single field of a segment
            </summary>
        </member>
        <member name="M:ERPConnect.Idocs.IdocSegmentField.#ctor">
            <summary>
            Initiliazes an IdocSegmentFiled object
            </summary>
        </member>
        <member name="M:ERPConnect.Idocs.IdocSegmentField.#ctor(System.String)">
            <summary>
            Initiliazes an IdocSegmentFiled object
            </summary>
            <param name="Name">Name of Idoc segment field</param>
        </member>
        <member name="M:ERPConnect.Idocs.IdocSegmentField.#ctor(System.String,System.String,System.Int32,System.Int32,System.String,System.Object)">
            <summary>
            initilizes an IdocSegmentFiled object
            </summary>
            <param name="Name">Name of the segment field</param>
            <param name="Description">Description of the segment field</param>
            <param name="Length">Length of the segment field</param>
            <param name="Offset">Offset in data buffer of the segment field</param>
            <param name="DataType">Data type of the segment field</param>
            <param name="FieldValue">The value</param>
        </member>
        <member name="M:ERPConnect.Idocs.IdocSegmentField.Clone">
            <summary>
            Creates a copy of the current object
            </summary>
            <returns>The cloned IdocSegemntField object</returns>
        </member>
        <member name="P:ERPConnect.Idocs.IdocSegmentField.FieldValue">
            <summary>
            Object that contains the data of the field (in most cases this is a string)
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.IdocSegmentField.FieldName">
            <summary>
            Field Name
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.IdocSegmentField.Description">
            <summary>
            Description as defined in the DDIC 
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.IdocSegmentField.OffsetInBuffer">
            <summary>
            Index of first byte
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.IdocSegmentField.ExternalLength">
            <summary>
            Output Length
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.IdocSegmentField.DataType">
            <summary>
            Data type (e.g. CHAR, NUMC ...)
            </summary>
        </member>
        <member name="T:ERPConnect.Idocs.IdocSegmentFieldCollection">
            <summary>
            Collection of IdocSegmentField objects
            </summary>
        </member>
        <member name="M:ERPConnect.Idocs.IdocSegmentFieldCollection.#ctor">
            <summary>
            Initializes an empty collection
            </summary>
        </member>
        <member name="M:ERPConnect.Idocs.IdocSegmentFieldCollection.Add(ERPConnect.Idocs.IdocSegmentField)">
            <summary>
            Adds a new item to the collection
            </summary>
            <param name="NewParameter">Valid IdocSegmentField object</param>
        </member>
        <member name="M:ERPConnect.Idocs.IdocSegmentFieldCollection.Add(System.String)">
            <summary>
            Creates a new IdocSegmentField object, adds it to the collection and returns it
            </summary>
            <param name="Name">Name of the segment field</param>
            <returns>Returns the newly created IdocSegmentField object</returns>
        </member>
        <member name="M:ERPConnect.Idocs.IdocSegmentFieldCollection.Add(System.String,System.String,System.Int32,System.Int32,System.String,System.Object)">
            <summary>
            Creates a new IdocSegmentField object, adds it to the collection and returns the new object
            </summary>
            <param name="Name">Name of the segment field</param>
            <param name="Description">Description of the segment field</param>
            <param name="Length">Length of the segment field</param>
            <param name="Offset">Offset in data buffer of the segment field</param>
            <param name="DataType">Data type of the segment field</param>
            <param name="FieldValue">The value</param>
            <returns>Returns the newly created IdocSegmentField object</returns>
        </member>
        <member name="P:ERPConnect.Idocs.IdocSegmentFieldCollection.Item(System.Int32)">
            <summary>
            Returns a IdocSegmentField object at a given position
            </summary>
            <param name="Index">The position of the object in the collection to be returned</param>
        </member>
        <member name="P:ERPConnect.Idocs.IdocSegmentFieldCollection.Item(System.String)">
            <summary>
            Returns a IdocSegmentField object at a given position
            </summary>
            <param name="SegmentName">Name of the segment to be returned</param>
        </member>
        <member name="T:ERPConnect.Idocs.IdocStatus">
            <summary>
            IdocStatus represents a single status of an IDoc.
            </summary>
        </member>
        <member name="M:ERPConnect.Idocs.IdocStatus.#ctor">
            <summary>
            Constructs an IdocStatus object
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.IdocStatus.Status">
            <summary>
            Status code
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.IdocStatus.UserName">
            <summary>
            Defines the SAP user that has caused this status
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.IdocStatus.Description">
            <summary>
            The plain description of this status
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.IdocStatus.StatusVar1">
            <summary>
            Variable which the description text may contain
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.IdocStatus.StatusVar2">
            <summary>
            Variable which the description text may contain
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.IdocStatus.StatusVar3">
            <summary>
            Variable which the description text may contain
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.IdocStatus.StatusVar4">
            <summary>
            Variable which the description text may contain
            </summary>
        </member>
        <member name="P:ERPConnect.Idocs.IdocStatus.CreationDateTime">
            <summary>
            Date and time when this sttus was created
            </summary>
        </member>
        <member name="T:ERPConnect.Idocs.IdocStatusCollection">
            <summary>
            Represents a collection of IdocStatus objects 
            </summary>
        </member>
        <member name="M:ERPConnect.Idocs.IdocStatusCollection.Add(ERPConnect.Idocs.IdocStatus)">
            <summary>
            Adds a new IdocStatus object to the collection.
            </summary>
            <param name="NewStatus">IdocStatus object</param>
        </member>
        <member name="P:ERPConnect.Idocs.IdocStatusCollection.Item(System.Int32)">
            <summary>
            returns a single IdocStatus object from the collection
            </summary>
            <param name="Index">Index of the IdocStatus object in the collection</param>
        </member>
        <member name="T:ERPConnect.LIC">
            <summary>
            This class is for licensing purpose
            </summary>
        </member>
        <member name="M:ERPConnect.LIC.SetLic(System.String)">
            <summary>
            Sets the current licence key
            </summary>
            <remarks>Use this Method to set a valid licence key before opening a server or client connection to SAP
            <code>ERPConnect.LIC.SetLic("XXXXXXXXXX");</code>
            </remarks>
            <param name="LicKey">Licence key</param>
        </member>
        <member name="M:ERPConnect.LIC.IsValid">
            <summary>
            Checks whether the given licence key or if the trial period has not yet elapsed
            </summary>
            <returns>true / false</returns>
        </member>
        <member name="P:ERPConnect.LIC.ExpirationDate">
            <summary>
            Date on which the license key expires
            </summary>
        </member>
        <member name="T:ERPConnect.Messages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages._0_isnotavalidTID">
            <summary>
              Looks up a localized string similar to {0} is not a valid TID.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Badauthentication">
            <summary>
              Looks up a localized string similar to Bad authentication.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Cannotconvert_0_toaninternalRFCtype">
            <summary>
              Looks up a localized string similar to Cannot convert {0} to an internal RFC type.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.CannotconvertRFCtype_0_toascalarsystemtype">
            <summary>
              Looks up a localized string similar to Cannot convert RFC type {0} to a scalar system type.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Cantaddthisstructurebecausethecolumnshavetobethesame">
            <summary>
              Looks up a localized string similar to Can&apos;t add this structure because the columns have to be the same.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.CantinitializesastructurewithzerolengthPleasecheck">
            <summary>
              Looks up a localized string similar to Can&apos;t initializes a structure with zero length. Please check RFCTableColumnCollection object.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Cantretrievestructureinfoforascalarparameter">
            <summary>
              Looks up a localized string similar to Can&apos;t retrieve structure info for a scalar parameter.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.ConnectionIsNotValid">
            <summary>
              Looks up a localized string similar to Connection is not valid.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Couldnotcreatenewinternaltable">
            <summary>
              Looks up a localized string similar to Could not create new internal table.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.CouldnotfindElement_0">
            <summary>
              Looks up a localized string similar to Could not find Element &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Couldnotfindstructurenodefortable_0">
            <summary>
              Looks up a localized string similar to Could not find structure node for table {0}.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Couldnotlocatecontrolrecord">
            <summary>
              Looks up a localized string similar to Could not locate control record.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Donotuseprimaykeypackagingwithoutacustomfunctionmodule">
            <summary>
              Looks up a localized string similar to Do not use primay key packaging without a custom function module.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.ErrorduringconnecttoSAPgateway">
            <summary>
              Looks up a localized string similar to Error during connect to SAP gateway.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.ErrorduringdispatchofincomingfunctionLastreturn_0">
            <summary>
              Looks up a localized string similar to Error during dispatch of incoming function. Last return={0}.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Errorduringinstallationoffunction">
            <summary>
              Looks up a localized string similar to Error during installation of function.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.ErrorduringSAPmemoryallocation">
            <summary>
              Looks up a localized string similar to Error during SAP memory allocation.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.ErrorwhilereadingHierarchies">
            <summary>
              Looks up a localized string similar to Error while reading Hierarchies.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.ErrorwhilereadingMembers">
            <summary>
              Looks up a localized string similar to Error while reading Members.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.ErrorwhileretrievinginformationaboutRFCconnection">
            <summary>
              Looks up a localized string similar to Error while retrieving information about RFC connection.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Errorwhiletryingtoclose">
            <summary>
              Looks up a localized string similar to Error while trying to close ....
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Executionfailed">
            <summary>
              Looks up a localized string similar to Execution failed.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.InstallLibrfc32WOW64">
             <summary>
               Looks up a localized string similar to Cannot call classic RFC API. See help for details.
            Please put a recent 32-bit version of librfc32.dll in your SysWOW64 folder (typically C:\Windows\SysWOW64).
            See SAP note 413708. Please make sure you have installed Visual C++ 2005 SP1 ATL Security Update (x86)..
             </summary>
        </member>
        <member name="P:ERPConnect.Messages.InstallLibrfc32x64">
             <summary>
               Looks up a localized string similar to Cannot call classic RFC API.  See help for details.
            Please put a recent 64-bit version of librfc32.dll in your System32 folder (typically C:\Windows\System32).
            See SAP note 413708. Please make sure you have installed Visual C++ 2005 SP1 ATL Security Update (x64)..
             </summary>
        </member>
        <member name="P:ERPConnect.Messages.InstallLibrfc32x86">
             <summary>
               Looks up a localized string similar to Cannot call classic RFC API.  See help for details.
            Please put a recent 32-bit version of librfc32.dll in your System32 folder (typically C:\Windows\System32).
            See SAP note 413708. Please make sure you have installed Visual C++ 2005 SP1 ATL Security Update (x86)..
             </summary>
        </member>
        <member name="P:ERPConnect.Messages.InstallNetWeaverLibariesx86">
             <summary>
               Looks up a localized string similar to Cannot call NetWeaver RFC API. See help for details. 
            Please install {0}.dll to GAC and  put recent 32-bit versions of the NetWeaver RFC libraries in your System32 folder (typically C:\Windows\System32).
            See SAP note 1025361. Please make sure you have installed Visual C++ 2005 SP1 ATL Security Update (x86)..
             </summary>
        </member>
        <member name="P:ERPConnect.Messages.InstallNetWeaverLibrariesWOW64">
             <summary>
               Looks up a localized string similar to Cannot call NetWeaver RFC API. See help for details. 
            Please install {0}.dll to GAC and put recent 32-bit versions of the NetWeaver RFC libraries in your SysWOW64 folder (typically C:\Windows\SysWOW64).
            See SAP note 1025361. Please make sure you have installed Visual C++ 2005 SP1 ATL Security Update (x86)..
             </summary>
        </member>
        <member name="P:ERPConnect.Messages.InstallNetWeaverLibrariesx64">
             <summary>
               Looks up a localized string similar to Cannot call NetWeaver RFC API. See help for details. 
            Please install {0}.dll to GAC and put recent 64-bit versions of the NetWeaver RFC libraries in your System32 folder (typically C:\Windows\System32).
            See SAP note 1025361. Please make sure you have installed Visual C++ 2005 SP1 ATL Security Update (x64)..
             </summary>
        </member>
        <member name="P:ERPConnect.Messages.InternalFunction_0_returned_1">
            <summary>
              Looks up a localized string similar to Internal Function {0} returned {1}.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.ItGetLinereturned0">
            <summary>
              Looks up a localized string similar to ItGetLine returned 0.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Messagecouldnotbefound">
            <summary>
              Looks up a localized string similar to Message could not be found.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Methodisnotimplemented">
            <summary>
              Looks up a localized string similar to Method is not implemented.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.NoChangingsnodefound">
            <summary>
              Looks up a localized string similar to No Changings node found.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Nocolumnsdefined">
            <summary>
              Looks up a localized string similar to No columns defined.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.NoConnectionAssigned">
            <summary>
              Looks up a localized string similar to No Connection Assigned or Connection invalid.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.NoCubepropertyassigned">
            <summary>
              Looks up a localized string similar to No Cube property assigned.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.NoCubepropertyassignedtoDimensionclass">
            <summary>
              Looks up a localized string similar to No Cube property assigned to Dimension class.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.NoCubepropertyassignedtoVariableclass">
            <summary>
              Looks up a localized string similar to No Cube property assigned to Variable class.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Nodatacouldbeselected">
            <summary>
              Looks up a localized string similar to No data could be selected.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.NoDimensionsnodefound">
            <summary>
              Looks up a localized string similar to No Dimensions node found.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.NoExportsnodefound">
            <summary>
              Looks up a localized string similar to No Exports node found.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.NoIdocnumbergiven">
            <summary>
              Looks up a localized string similar to No Idoc number given (check property DOCNUM).
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.NoImportsnodefound">
            <summary>
              Looks up a localized string similar to No Imports node found.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.NoMeasuresnodefound">
            <summary>
              Looks up a localized string similar to No Measures node found.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Nonodesfound">
            <summary>
              Looks up a localized string similar to No nodes found.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.NoRfcFunctionnodefound">
            <summary>
              Looks up a localized string similar to No RfcFunction node found.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Nosegmentsfound">
            <summary>
              Looks up a localized string similar to No segments found.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Noselecteddimensionsfound">
            <summary>
              Looks up a localized string similar to No selected dimensions found.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.NoSSOwithSOAP">
            <summary>
              Looks up a localized string similar to No SSO with SOAP.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.NoTablesnodefound">
            <summary>
              Looks up a localized string similar to No Tables node found.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Notallofthelogonpropertiesaresetcorrectly">
            <summary>
              Looks up a localized string similar to Not all of the logon properties are set correctly.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Notifycouldnotbereceived">
            <summary>
              Looks up a localized string similar to Notify could not be received.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.NoVariablesnodefound">
            <summary>
              Looks up a localized string similar to No Variables node found.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Novariantorvariantinvalid">
            <summary>
              Looks up a localized string similar to No variant or variant invalid.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.ParamClass_0_notallowedinthiscontext">
            <summary>
              Looks up a localized string similar to ParamClass {0} not allowed in this context..
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.PleasedefineaselectionorusetheMaxRowsproperty">
            <summary>
              Looks up a localized string similar to Please define a selection or use the MaxRows property.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Pleasedonotassignavalueoftype_0_toaRFCparameteroftype_1">
            <summary>
              Looks up a localized string similar to Please do not assign a value of type {0} to a RFC parameter of type {1}.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.PleasedonotuseaconnectionstringwhileClientProtocolissettoHttpSoap">
            <summary>
              Looks up a localized string similar to Please do not use a connection string while ClientProtocol is set to HttpSoap.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.PleasemakesurethatthefieldsUserGroupandNamearefilledcorrectly">
            <summary>
              Looks up a localized string similar to Please make sure that the fields &apos;UserGroup&apos; and &apos;Name&apos; are filled correctly.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Querydoesnotexists">
            <summary>
              Looks up a localized string similar to Query does not exist.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Querylocked">
            <summary>
              Looks up a localized string similar to Query locked.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Querymusthaveavariant">
            <summary>
              Looks up a localized string similar to Query must have a variant.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.RFCServerobjectcouldnotberegisteredCheckyournetworkconfiguration">
            <summary>
              Looks up a localized string similar to RFCServer object could not be registered. Check your network configuration.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Segment_0_notvalidforthisIdoc">
            <summary>
              Looks up a localized string similar to Segment {0} not valid for this Idoc.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Serveralreadyrunning">
            <summary>
              Looks up a localized string similar to Server already running.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Serverisnotrunning">
            <summary>
              Looks up a localized string similar to Server is not running.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.SorryDebuggingisnotsupoortedwhenusingtheSOAPprotocol">
            <summary>
              Looks up a localized string similar to Sorry, Debugging is not supoorted when using the SOAP protocol.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.SQLtoolong">
            <summary>
              Looks up a localized string similar to SQL too long!!!.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Systemfailureduringcall">
            <summary>
              Looks up a localized string similar to System failure during call. An error description could to be obtained. You may turn the logging on to get more detailed information.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Systemfailureduringcall2">
            <summary>
              Looks up a localized string similar to System failure during call. You may turn the logging on to get more detailed information.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Tablehaswidth0">
            <summary>
              Looks up a localized string similar to Table has width=0.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.TheIdocdatabufferswidthis1000bytes">
            <summary>
              Looks up a localized string similar to The Idoc data buffer&apos;s width is 1000 bytes!!.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Theselectionparameter_0_isobligatoryandthereisnovalueprovided">
            <summary>
              Looks up a localized string similar to The selection parameter {0} is obligatory and there is no value provided..
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Thisisnotavalidschemafile">
            <summary>
              Looks up a localized string similar to This is not a valid schema file.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.TimeoutwhilewaitingforRequest">
            <summary>
              Looks up a localized string similar to Timeout while waiting for Request.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Type_0_isnotallowedinConvertsStringToRawBytes">
            <summary>
              Looks up a localized string similar to Type {0} is not allowed in Converts.StringToRawBytes.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Type_0_notsupportedinthiscontext">
            <summary>
              Looks up a localized string similar to Type {0} not supported in this context.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Typenotsupportedinthiscontext">
            <summary>
              Looks up a localized string similar to Type not supported in this context!.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.UnabletoallocateParamSpace">
            <summary>
              Looks up a localized string similar to Unable to allocate ParamSpace.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.UnabletoallocateSpaceforTable_0_Line_1">
            <summary>
              Looks up a localized string similar to Unable to allocate Space for Table {0}, Line {1}.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.UnabletoconfirmTID">
            <summary>
              Looks up a localized string similar to Unable to confirm TID.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Unabletoconvert_0">
            <summary>
              Looks up a localized string similar to Unable to convert {0}.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Unabletoconvertvalue_0_todecimal">
            <summary>
              Looks up a localized string similar to Unbale to convert value {0} to decimal.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.UnabletodetectRequestType">
            <summary>
              Looks up a localized string similar to Unable to detect RequestType.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Unabletofindmethod_0_atObjectType_1">
            <summary>
              Looks up a localized string similar to Unable to find method {0} at ObjectType {1}.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.UnabletoobtainaSSOticket">
            <summary>
              Looks up a localized string similar to Unable to obtain a SSO ticket.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.UnabletoobtainTID">
            <summary>
              Looks up a localized string similar to Unable to obtain TID.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Unabletoopenconnectionto_0">
            <summary>
              Looks up a localized string similar to Unable to open connection to {0}.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.UnabletostartRequest">
            <summary>
              Looks up a localized string similar to Unable to start Request.
            </summary>
        </member>
        <member name="P:ERPConnect.Messages.Usergroupdoesnotexist">
            <summary>
              Looks up a localized string similar to Usergroup does not exist.
            </summary>
        </member>
        <member name="T:ERPConnect.IncludeStructure">
            <summary>
            Represents an include structure within a structure
            </summary>
        </member>
        <member name="M:ERPConnect.IncludeStructure.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the IncludeStructure class
            </summary>
            <param name="firstElementIndex">First element of the include structure</param>
            <param name="structureName">DDIC name of the include structure</param>
        </member>
        <member name="M:ERPConnect.IncludeStructure.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the IncludeStructure class
            </summary>
            <param name="firstElementIndex">First element of the include structure</param>
            <param name="structureName">DDIC name of the include structure</param>
            <param name="elementsCount">Number of elements of the include structure</param>
        </member>
        <member name="P:ERPConnect.IncludeStructure.FirstElementIndex">
            <summary>
            Gets the index of the first element of the include structure
            </summary>
        </member>
        <member name="P:ERPConnect.IncludeStructure.StructureName">
            <summary>
            Gets the DDIC name of the include structure
            </summary>
        </member>
        <member name="P:ERPConnect.IncludeStructure.ElementsCount">
            <summary>
            Gets the number of elements of the include structure
            </summary>
        </member>
        <member name="P:ERPConnect.IncludeStructure.LastElementIndex">
            <summary>
            Gets the index of the last element of the include structure
            </summary>
        </member>
        <member name="P:ERPConnect.IncludeStructure.Alignment">
            <summary>
            Gets the alignment of the include structure
            </summary>
        </member>
        <member name="T:ERPConnect.RFCParameter">
            <summary>
            RFCParameters object represent the parameters to be exchanged with the SAP function module
            </summary>
        </member>
        <member name="M:ERPConnect.RFCParameter.#ctor(System.String,ERPConnect.RFCTYPE,System.Int32,System.Int32,System.Object)">
            <summary>
            Initializes a new RFCParameter object
            </summary>
            <param name="name">Name as provided in the function module</param>
            <param name="type">RFC type of the parameter</param>
            <param name="length">Length of the parameter in bytes</param>
            <param name="decimals">Number of decimal digits</param>
            <param name="paramValue">Object which represnts the value that is exchanged with the SAP system</param>
        </member>
        <member name="M:ERPConnect.RFCParameter.#ctor(System.String,ERPConnect.RFCTYPE,System.Int32,System.Int32)">
            <summary>
            Initializes a new RFCParameter object
            </summary>
            <param name="name">Name as provided in the function module</param>
            <param name="type">RFC type of the parameter</param>
            <param name="length">Length of the parameter in bytes</param>
            <param name="decimals">Number of decimal digits</param>
        </member>
        <member name="M:ERPConnect.RFCParameter.#ctor(System.String,ERPConnect.RFCTYPE,System.Int32)">
            <summary>
            Initializes a new RFCParameter object
            </summary>
            <param name="name">Name as provided in the function module</param>
            <param name="type">RFC type of the parameter</param>
            <param name="length">Length of the parameter in bytes</param>
        </member>
        <member name="M:ERPConnect.RFCParameter.#ctor(System.String,ERPConnect.RFCTYPE)">
            <summary>
            Initializes a new RFCParameter object
            </summary>
            <param name="name">Name as provided in the function module</param>
            <param name="type">RFC type of the parameter</param>
        </member>
        <member name="M:ERPConnect.RFCParameter.#ctor(System.String,ERPConnect.RFCTableColumnCollection)">
            <summary>
            Initializes a new RFCParameter object that is a structure
            </summary>
            <param name="name">Name as provided in the function module</param>
            <param name="columns">ColumnCollection object for structured parameters</param>
        </member>
        <member name="M:ERPConnect.RFCParameter.GetLength">
            <summary>
            Returns the Length of the parameter
            </summary>
            <returns>Length of the parameter in bytes</returns>
        </member>
        <member name="M:ERPConnect.RFCParameter.RetrieveColumnsByStructure(ERPConnect.R3Connection,System.String)">
            <summary>
            Retrieves a structure from the SAP Data Dictionary
            </summary>
            <param name="Connection">R3Connection object</param>
            <param name="StructureName">Name of the DDIC structure</param>
        </member>
        <member name="M:ERPConnect.RFCParameter.IsStructure">
            <summary>
            Returns whether the parameter is a structured data type
            </summary>
            <returns>true / false</returns>
        </member>
        <member name="M:ERPConnect.RFCParameter.IsTable">
            <summary>
            Returns whether the parameter is an internal table
            </summary>
            <returns>true / false</returns>
        </member>
        <member name="M:ERPConnect.RFCParameter.ToString">
            <summary>
            Converts the paramter value to System.String
            </summary>
            <returns>System.String object</returns>
        </member>
        <member name="M:ERPConnect.RFCParameter.ToBytes">
            <summary>
            Converts the parameter value to System.Byte[]
            </summary>
            <returns>System.Byte[] object</returns>
        </member>
        <member name="M:ERPConnect.RFCParameter.ToInt32">
            <summary>
            Converts the parameter value to System.Int32
            </summary>
            <returns>System.Int32 object</returns>
        </member>
        <member name="M:ERPConnect.RFCParameter.ToDouble">
            <summary>
            Converts the parameter value to System.Double
            </summary>
            <returns>System.Double object</returns>
        </member>
        <member name="M:ERPConnect.RFCParameter.ToStructure">
            <summary>
            Converts the parameter value to RFCStructure
            </summary>
            <returns>RFCStructure object</returns>
        </member>
        <member name="M:ERPConnect.RFCParameter.ToTable">
            <summary>
            Converts the parameter value to RFCTable
            </summary>
            <returns>RFCTable object</returns>
        </member>
        <member name="P:ERPConnect.RFCParameter.Name">
            <summary>
            The name of the parameter (as defined in the function module)
            </summary>
        </member>
        <member name="P:ERPConnect.RFCParameter.ParamValue">
            <summary>
            Get / sets the value of the parameter. Please pay close attention to the data type and the RFC type:
            
            ABAP type C -> System.String
            ABAP type I -> System.Int32
            ABAP type F -> System.Double
            ABAP type D -> System.String (YYYYMMDD)
            ABAP type T -> System.String (HHMMSS)
            ABAP type P -> System.Decimal
            ABAP type N -> System.String
            ABAP type X -> System.byte[]
            ABAP Type structure -> RFCStructure object
            
            </summary>
        </member>
        <member name="P:ERPConnect.RFCParameter.Decimals">
            <summary>
            Gets / sets the number decimals digits
            </summary>
        </member>
        <member name="P:ERPConnect.RFCParameter.Length">
            <summary>
            Gets / sets the paramter length in bytes
            </summary>
        </member>
        <member name="P:ERPConnect.RFCParameter.DDICFieldType">
            <summary>
            Represents the DDIC field type
            </summary>
        </member>
        <member name="P:ERPConnect.RFCParameter.Type">
            <summary>
            Gets / sets ths RFC Type
            </summary>
        </member>
        <member name="P:ERPConnect.RFCParameter.Tag">
            <summary>
            A tag that can be used for everything
            </summary>
        </member>
        <member name="T:ERPConnect.RFCParameterCollection">
            <summary>
            Collection of im- or export parameters of function module
            </summary>
        </member>
        <member name="M:ERPConnect.RFCParameterCollection.Add(ERPConnect.RFCParameter)">
            <summary>
            Adds a RFCParameter object to the collection
            </summary>
            <param name="NewParameter">RFCParameter object</param>
        </member>
        <member name="M:ERPConnect.RFCParameterCollection.Add(System.String,ERPConnect.RFCTYPE,System.Int32,System.Int32,System.Object)">
            <summary>
            Constructs a new parameter object by giving several properties
            </summary>
            <param name="Name">Name of the paramneter in the function module</param>
            <param name="Type">RFC type</param>
            <param name="Length">Length of Colum</param>
            <param name="Decimals">Number of decimal digits</param>
            <param name="ParamValue">Value of the parameter</param>
            <returns>A new RFCParameter object</returns>
        </member>
        <member name="M:ERPConnect.RFCParameterCollection.Add(System.String,ERPConnect.RFCTYPE,System.Int32,System.Int32)">
            <summary>
            Constructs a new parameter object by giving several properties
            </summary>
            <param name="Name">Name of the paramneter in the function module</param>
            <param name="Type">RFC type</param>
            <param name="Length">Length of Colum</param>
            <param name="Decimals">Number of decimal digits</param>
            <returns>A new RFCParameter object</returns>
        </member>
        <member name="M:ERPConnect.RFCParameterCollection.Add(System.String,ERPConnect.RFCTYPE,System.Int32)">
            <summary>
            Adds and returns a new RFCParameter object
            </summary>
            <param name="Name">Name of the parameter as defined in the function module</param>
            <param name="Type">RFC type of the new parameter</param>
            <param name="Length">Length of the new parameter in bytes</param>
            <returns>The new RFCParameter object</returns>
        </member>
        <member name="M:ERPConnect.RFCParameterCollection.Add(System.String,ERPConnect.RFCTYPE)">
            <summary>
            Adds and returns a new RFCParameter object
            </summary>
            <param name="Name">Name of the parameter as defined in the function module</param>
            <param name="Type">RFC type of the new parameter</param>
            <returns>The new RFCParameter object</returns>
        </member>
        <member name="M:ERPConnect.RFCParameterCollection.Add(System.String,ERPConnect.RFCTableColumnCollection)">
            <summary>
            Adds and returns a new RFCParameter object
            </summary>
            <param name="Name">Name of the parameter as defined in the function module</param>
            <param name="Columns">Columns collection for the RFCStructure</param>
            <returns>The new RFCParameter object</returns>
        </member>
        <member name="M:ERPConnect.RFCParameterCollection.Contains(System.String)">
            <summary>
            Checks whether a named parameter is contained in the collection
            </summary>
            <param name="Name">Name of the parameter</param>
            <returns>yes / no</returns>
        </member>
        <member name="P:ERPConnect.RFCParameterCollection.Item(System.Int32)">
            <summary>
            returns a RFCParameter object from the collection.
            </summary>
            <param name="Index">Index of the parameter in the RFCParameter collection</param>
        </member>
        <member name="P:ERPConnect.RFCParameterCollection.Item(System.String)">
            <summary>
            Returns a RFCParameter object by a given name.
            </summary>
            <param name="Name">Name of the parameter</param>
        </member>
        <member name="T:ERPConnect.RFCStructure">
            <summary>
            RFCStructure object represent a real structure or a row in a RFC table
            </summary>
        </member>
        <member name="M:ERPConnect.RFCStructure.#ctor">
            <summary>
            Initializes a new RFCStructure object
            </summary>
        </member>
        <member name="M:ERPConnect.RFCStructure.#ctor(ERPConnect.RFCTableColumnCollection)">
            <summary>
            Constructs a new RFCStructure. The structure is defined by the RFCTableColumnCollection
            </summary>
            <param name="columns">A RFCTableColumnCollections</param>
        </member>
        <member name="M:ERPConnect.RFCStructure.IsStructure(System.String)">
            <summary>
            Returns whether a component of a structure is a structure
            </summary>
            <param name="componentName">Name of the component</param>
        </member>
        <member name="M:ERPConnect.RFCStructure.IsStructure(System.Int32)">
            <summary>
            Returns wether a component of a structure is a structure
            </summary>
            <param name="componentIndex">Index of the component</param>
        </member>
        <member name="M:ERPConnect.RFCStructure.IsTable(System.String)">
            <summary>
            Returns whether a component of a structure is a table
            </summary>
            <param name="componentName">Name of the component</param>
        </member>
        <member name="M:ERPConnect.RFCStructure.IsTable(System.Int32)">
            <summary>
            Returns whether a component of a structure is a table
            </summary>
            <param name="componentIndex">Index of the component</param>
        </member>
        <member name="M:ERPConnect.RFCStructure.ToStructure(System.String)">
            <summary>
            Converts a component of the structure to RFCStructure
            </summary>
            <param name="componentName">Name of the component</param>
            <returns>Component converted to RFCStructure</returns>
        </member>
        <member name="M:ERPConnect.RFCStructure.ToStructure(System.Int32)">
            <summary>
            Converts a component of the structure to RFCStructure
            </summary>
            <param name="componentIndex">Index of the component</param>
            <returns>Component converted to RFCStructure</returns>
        </member>
        <member name="M:ERPConnect.RFCStructure.ToTable(System.String)">
            <summary>
            Converts a component of the structure to RFCTable
            </summary>
            <param name="componentName">Name of the component</param>
            <returns>Component converted to RFCTable</returns>
        </member>
        <member name="M:ERPConnect.RFCStructure.ToTable(System.Int32)">
            <summary>
            Converts a component of the structure to RFCTable
            </summary>
            <param name="componentIndex">Index of the component</param>
            <returns>Component converted to RFCTable</returns>
        </member>
        <member name="P:ERPConnect.RFCStructure.Length">
            <summary>
            returns the overall width of a structured Type
            </summary>
        </member>
        <member name="P:ERPConnect.RFCStructure.Columns">
            <summary>
            Returns a RFCTableColumn collection
            </summary>
        </member>
        <member name="P:ERPConnect.RFCStructure.Item(System.Int32)">
            <summary>
            Returns the value of a structure element by providing the index of element
            </summary>
            <param name="index">Index of the element to be returned</param>
        </member>
        <member name="P:ERPConnect.RFCStructure.Item(System.String)">
            <summary>
            Returns the value of a structure element by providing the name of element
            </summary>
            <param name="columnName">Name of the element to be returned</param>
        </member>
        <member name="T:ERPConnect.RFCStructureCollection">
            <summary>
            Collection over RFCStruture objects which represents a row of a table
            </summary>
        </member>
        <member name="M:ERPConnect.RFCStructureCollection.#ctor">
            <summary>
            Initializes a new RFCStruture collection which represents a row of a RFCTable object
            </summary>
        </member>
        <member name="M:ERPConnect.RFCStructureCollection.#ctor(ERPConnect.RFCTableColumnCollection)">
            <summary>
            initializies a new RFCStrucure collection which represents a table row.
            </summary>
            <param name="columns">RFCTableColumn collection which defines the columns of the table</param>
        </member>
        <member name="M:ERPConnect.RFCStructureCollection.Add(ERPConnect.RFCStructure)">
            <summary>
            Adds a new Item to the Collection
            </summary>
            <param name="rfcStructure">RFCStructure to be added</param>
        </member>
        <member name="M:ERPConnect.RFCStructureCollection.Add">
            <summary>
            Creates a new RFCStructure object and adds it to the collection.
            </summary>
            <returns>A RFCStructure object which represents a new table row</returns>
        </member>
        <member name="P:ERPConnect.RFCStructureCollection.Item(System.Int32)">
            <summary>
            Returns a RFCStructure object 
            </summary>
            <param name="Index">Returns a RFCStructure object at a given position</param>		
        </member>
        <member name="P:ERPConnect.RFCStructureCollection.Item(System.Int32,System.Int32)">
            <summary>
            Returns the value at a given position in the table (index of the row and index the column)
            </summary>
            <param name="rowIndex">Index of the row to be returned</param>
            <param name="columnIndex">Index of the column to be returned</param>
        </member>
        <member name="P:ERPConnect.RFCStructureCollection.Item(System.Int32,System.String)">
            <summary>
            Returns the value at a given position in the table (index of the row and name of the column)
            </summary>
            <param name="rowIndex">Index of the row to be returned</param>
            <param name="columnName">Name of the column to be returned</param>
        </member>
        <member name="T:ERPConnect.RFCTable">
            <summary>
            RFCTable represents a single table to be assigned to a RFCServerFunction object or to a RFCFunction object
            </summary>
        </member>
        <member name="M:ERPConnect.RFCTable.#ctor">
            <summary>
            Initializes a new RFCTable object
            </summary>
        </member>
        <member name="M:ERPConnect.RFCTable.#ctor(System.String)">
            <summary>
            Initializes a new RFCTable object and sets the name of the table
            </summary>
            <param name="name">Name of the table</param>
        </member>
        <member name="M:ERPConnect.RFCTable.#ctor(System.String,ERPConnect.RFCTableColumnCollection)">
            <summary>
            Initializes a new RFCTable object and sets the name and columns of the table 
            </summary>
            <param name="name">Name of the table</param>
            <param name="columns">Columns of the table</param>
        </member>
        <member name="M:ERPConnect.RFCTable.AddRow">
            <summary>
            Adds a new row and returns the new RFCStructure object
            </summary>
            <returns>The new RFCStrucure object which represents the new row</returns>
        </member>
        <member name="M:ERPConnect.RFCTable.RetrieveColumnsByStructure(System.String,ERPConnect.R3Connection)">
            <summary>
            Retrieves the columns directly from the SAP Data Dictionary. The RFCColumn collection will be overwritten
            </summary>
            <param name="structureName">DDIC name of the structure</param>
            <param name="connection">R3Connection object</param>
        </member>
        <member name="M:ERPConnect.RFCTable.ToADOTable">
            <summary>
            Converts the RFCTable object into an ADO.NET DataTable object
            </summary>
            <returns>A newly created ADO.NET DataTable</returns>
        </member>
        <member name="M:ERPConnect.RFCTable.ToADOTable(System.String[])">
            <summary>
            Converts the RFCTable object into an ADO.NET DataTable object
            </summary>
            <param name="columnNames">Column array</param>
            <returns>A newly created DataTable object</returns>
        </member>
        <member name="M:ERPConnect.RFCTable.ToADOTable(System.String)">
            <summary>
            Converts the RFCTable object into an ADO.NET DataTable object
            </summary>
            <param name="filter">Filter expression</param>
            <returns>A newly created DataTable object</returns>
        </member>
        <member name="M:ERPConnect.RFCTable.ToADOTable(System.String[],System.String)">
            <summary>
            Converts the RFCTable object into an ADO.NET DataTable object
            </summary>
            <param name="columnNames">Column array</param>
            <param name="filter">Filter expression</param>
            <returns>A newly created DataTable object</returns>
        </member>
        <member name="M:ERPConnect.RFCTable.Clear">
            <summary>
            Empties the table
            </summary>
        </member>
        <member name="M:ERPConnect.RFCTable.RowLength">
            <summary>
            Returns the width of one table row
            </summary>
            <returns>The width of a table row</returns>
        </member>
        <member name="P:ERPConnect.RFCTable.Columns">
            <summary>
            Returns a collection of RFCTableColumn objects which represent the columns of the table.
            </summary>
        </member>
        <member name="P:ERPConnect.RFCTable.Rows">
            <summary>
            Returns a collection of RFCStructure object which represent the rows of the table
            </summary>
        </member>
        <member name="P:ERPConnect.RFCTable.Name">
            <summary>
            Returns the name of the table as provided by the function module
            </summary>
        </member>
        <member name="P:ERPConnect.RFCTable.RowCount">
            <summary>
            Returns the number of rows contained in this table
            </summary>
        </member>
        <member name="P:ERPConnect.RFCTable.Item(System.Int32)">
            <summary>
            Returns a row represented by a RFCStrcuture object at a given index
            </summary>
            <param name="rowIndex">The row index</param>
            <returns>A RFCStructure object</returns>
        </member>
        <member name="P:ERPConnect.RFCTable.Item(System.Int32,System.Int32)">
            <summary>
            Returns the value of table line at row RowIndex and column index ColIndex
            </summary>
            <param name="rowIndex">The row index</param>
            <param name="columnIndex">The column index</param>
            <returns>A table call value</returns>
        </member>
        <member name="P:ERPConnect.RFCTable.Item(System.Int32,System.String)">
            <summary>
            Returns the value of table line at row RowIndex and column ColName
            </summary>
            <param name="rowIndex">The row index</param>
            <param name="columnName">The name of column</param>
            <returns>A table call value</returns>
        </member>
        <member name="T:ERPConnect.RFCTableCollection">
            <summary>
            This represents a set of tables to be exchanged with a function module
            </summary>
        </member>
        <member name="M:ERPConnect.RFCTableCollection.Add(ERPConnect.RFCTable)">
            <summary>
            Adds a RFCTable object to the collection
            </summary>
            <param name="NewParameter">RFCTable object</param>
        </member>
        <member name="M:ERPConnect.RFCTableCollection.Add(System.String)">
            <summary>
            Create a new RFCTable by a given name a return the new RFCTable object
            </summary>
            <param name="Name">Name of the table as provided in the function module</param>
            <returns>A RFCTable object</returns>
        </member>
        <member name="P:ERPConnect.RFCTableCollection.Item(System.Int32)">
            <summary>
            returns a RFCTable object by a given index
            </summary>
            <param name="Index">Position of the RFCTable object in the collection</param>
        </member>
        <member name="P:ERPConnect.RFCTableCollection.Item(System.String)">
            <summary>
            returns a RFCTable object by a given table name
            </summary>
            <param name="Name">Name of the RFCTable object in the collection</param>
        </member>
        <member name="T:ERPConnect.RFCTableColumn">
            <summary>
            RFCTableColumn object represent an one column in a table or a structure to be exchanged with a function module
            </summary>
        </member>
        <member name="M:ERPConnect.RFCTableColumn.#ctor(System.String)">
            <summary>
            return a RFCTableColumn object by a given name
            </summary>
            <param name="name">Name auf the column</param>
        </member>
        <member name="M:ERPConnect.RFCTableColumn.#ctor(System.String,System.Int32,ERPConnect.RFCTYPE)">
            <summary>
            constructs a RFCTableColumn object
            </summary>
            <param name="name">Name of the column</param>
            <param name="length">Length of the column</param>
            <param name="type">RFC type of the column</param>
        </member>
        <member name="M:ERPConnect.RFCTableColumn.#ctor(System.String,System.Int32,System.Int32,ERPConnect.RFCTYPE)">
            <summary>
            constucts a RFCTableColumn object
            </summary>
            <param name="name">Name of the column</param>
            <param name="length">Length of the column (be careful with BCD types)</param>
            <param name="decimals">Number of decimal digits</param>
            <param name="type">RFC type</param>
        </member>
        <member name="P:ERPConnect.RFCTableColumn.Name">
            <summary>
            Name of the column
            </summary>
        </member>
        <member name="P:ERPConnect.RFCTableColumn.Length">
            <summary>
            Length of the column
            </summary>
        </member>
        <member name="P:ERPConnect.RFCTableColumn.Offset">
            <summary>
            Offset of the column
            </summary>
        </member>
        <member name="P:ERPConnect.RFCTableColumn.Decimals">
            <summary>
             Number of decimal digits of the table column
            </summary>
        </member>
        <member name="P:ERPConnect.RFCTableColumn.Type">
            <summary>
            RFC type of the table column
            </summary>
        </member>
        <member name="P:ERPConnect.RFCTableColumn.Tag">
            <summary>
            A tag that can be used for everything
            </summary>
        </member>
        <member name="P:ERPConnect.RFCTableColumn.NestedColumns">
            <summary>
            Gets or sets the columns nested inside this column
            </summary>
        </member>
        <member name="P:ERPConnect.RFCTableColumn.IsNonStructureLineType">
            <summary>
            Gets a value which indicates if this column is a wrapper column
            for a non-structure line type (single value or table).
            This is needed because RFCTable objects can only have RFCStructure objects
            as lines
            </summary>
        </member>
        <member name="T:ERPConnect.RFCTableColumnCollection">
            <summary>
            Represents a collection of RFCTableColumn objects for a RFCTable or a RFCStructure.
            </summary>
        </member>
        <member name="M:ERPConnect.RFCTableColumnCollection.Add(ERPConnect.RFCTableColumn)">
            <summary>
            Adds a new RFCTableColumn object to the collection.
            </summary>
            <param name="newParameter">RFCTableColumn object</param>
        </member>
        <member name="M:ERPConnect.RFCTableColumnCollection.Add(System.String,System.Int32,System.Int32,ERPConnect.RFCTYPE,System.Int32)">
            <summary>
            Adds a new RFCTableColumn object to the collection.
            </summary>
            <param name="name">Name of the column as provieded in the DDIC</param>
            <param name="length">Length of the column</param>
            <param name="decimals">Number of decimal digits</param>
            <param name="type">RFC type of the column</param>
            <param name="offset">Byte-Offset</param>
        </member>
        <member name="M:ERPConnect.RFCTableColumnCollection.Add(System.String,System.Int32,System.Int32,ERPConnect.RFCTYPE)">
            <summary>
            Adds a new RFCTableColumn object to the collection.
            </summary>
            <param name="name">Name of the column as provieded in the DDIC</param>
            <param name="length">Length of the column</param>
            <param name="decimals">Number of decimal digits</param>
            <param name="type">RFC type of the column</param>
        </member>
        <member name="M:ERPConnect.RFCTableColumnCollection.Add(System.String,System.Int32,ERPConnect.RFCTYPE)">
            <summary>
            Adds a new RFCTableColumn object to the collection.
            </summary>
            <param name="name">Name of the column as provieded in the DDIC</param>
            <param name="length">Length of the column</param>
            <param name="type">RFC type of the column</param>
        </member>
        <member name="M:ERPConnect.RFCTableColumnCollection.GetAlignment(ERPConnect.RFCTYPE,System.Boolean)">
            <summary>
            Gets the alignment for a RFC type (which is the same as its size)
            </summary>
            <param name="rfcType">RFC type of which the alignment will be returned</param>
            <param name="isUnicode">Do we have 2-byte characters?</param>
            <returns></returns>
        </member>
        <member name="M:ERPConnect.RFCTableColumnCollection.Align(System.Boolean)">
            <summary>
            Aligns the offset of the columns according to their type and position. 
            This may also affect the RowLength of this object.
            </summary>
            <param name="isUnicode">A value which indicates if the destination system is a Unicode system</param>
        </member>
        <member name="M:ERPConnect.RFCTableColumnCollection.CalcAlignment(System.Boolean)">
            <summary>
            Calculates the alignment of this column collection
            </summary>
            <remarks>
                The alignment of a collection of columns is determined by 
                the maximum alignment of its members. 
                This is true recursively for includes and structured members.
            </remarks>
            <param name="isUnicode">Do we have 2-byte characters?</param>
        </member>
        <member name="M:ERPConnect.RFCTableColumnCollection.Align(System.Int32,System.Boolean)">
            <summary>
            Calculates and adjusts offsets of all members
            </summary>
            <param name="initialOffset">Minimum offset of first element</param>
            <param name="isUnicode">Do we have 2-byte characters?</param>
        </member>
        <member name="P:ERPConnect.RFCTableColumnCollection.ABAPStructureName">
            <summary>
            The name of the ABAP structure
            </summary>
        </member>
        <member name="P:ERPConnect.RFCTableColumnCollection.RowLength">
            <summary>
            RowLength represents the entire width of one table row.
            </summary>
        </member>
        <member name="P:ERPConnect.RFCTableColumnCollection.Item(System.Int32)">
            <summary>
            returns a single RFCTableColumn object from the collection
            </summary>
            <param name="index">Index of the RFCTableColumn object in the collection</param>
        </member>
        <member name="P:ERPConnect.RFCTableColumnCollection.Item(System.String)">
            <summary>
            returns a single RFCTableColumn object from the collection
            </summary>
            <param name="columnName">Name of the RFCTableColumn object in the collection</param>
        </member>
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_COMMUNICATION_FAILURE" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_LOGON_FAILURE" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_ABAP_RUNTIME_FAILURE" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_ABAP_MESSAGE" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_ABAP_EXCEPTION" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_CLOSED" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_CANCELED" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_TIMEOUT" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_MEMORY_INSUFFICIENT" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_VERSION_MISMATCH" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_INVALID_PROTOCOL" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_SERIALIZATION_FAILURE" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_INVALID_HANDLE" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_RETRY" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_EXTERNAL_FAILURE" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_EXECUTED" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_NOT_FOUND" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_NOT_SUPPORTED" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_ILLEGAL_STATE" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_INVALID_PARAMETER" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_CODEPAGE_CONVERSION_FAILURE" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_CONVERSION_FAILURE" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_BUFFER_TOO_SMALL" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_TABLE_MOVE_BOF" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_TABLE_MOVE_EOF" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_START_SAPGUI_FAILURE" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_ABAP_CLASS_EXCEPTION" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_UNKNOWN_ERROR" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC.RFC_AUTHORIZATION_FAILURE" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRC._RFC_RC_max_value" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_DATE" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_BCD" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_TIME" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_BYTE" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_TABLE" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_NUM" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_FLOAT" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_INT" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_INT2" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_INT1" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_NULL" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_ABAPOBJECT" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_STRUCTURE" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_DECF16" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_DECF34" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_XMLDATA" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_STRING" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_XSTRING" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_INT8" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_UTCLONG" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_UTCSECOND" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_UTCMINUTE" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_DTDAY" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_DTWEEK" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_DTMONTH" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_TSECOND" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_TMINUTE" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_CDAY" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_BOX" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType.RFCTYPE_GENERIC_BOX" -->
        <!-- Badly formed XML comment ignored for member "F:ERPConnect.NW.NWRFCType._RFCTYPE_max_value" -->
        <member name="P:ERPConnect.NW.INWConnectionAttributes.RFCDestination">
            RFC destination
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.Hostname">
            Own host name
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.PartnerHostname">
            Partner host name
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.SystemNumber">
            R/3 system number
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.SystemId">
            R/3 system ID
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.Client">
            Client ("Mandant")
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.User">
            User
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.Language">
            Language
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.TraceLevel">
            Trace level (0-3)
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.TwoLetterLanguageCode">
            ISO639-1 (Alpha-2) two letter language code
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.Codepage">
            Own code page
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.PartnerCodepage">
            Partner code page
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.RFCRole">
            C/S: RFC Client / RFC Server
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.DestinationType">
            2/3/E/R: R/2,R/3,Ext,Reg.Ext
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.PartnerDestinationType">
            2/3/E/R: R/2,R/3,Ext,Reg.Ext
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.SystemRelease">
            My system release
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.PartnerSystemRelease">
            Partner system release
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.PartnerKernelRelease">
            Partner kernel release
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.CPICConversationId">
            CPI-C Conversation ID
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.CallingProgramName">
            Name of the calling APAB program (report, module pool)
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.PartnerBytesPerChar">
            Number of bytes per character in the backend's current codepage. Note this is different from the semantics of the PCS parameter.
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.PartnerSystemCodepage">
            Partner system code page 
        </member>
        <member name="P:ERPConnect.NW.INWConnectionAttributes.Reserved">
            Reserved for later use
        </member>
        <member name="T:ERPConnect.Obfuscation">
             <summary>
             Obfuscation for storing sensitive data
             <remarks>
                 This is no encryption. 
                 It only protects data from being read directly by humans.
            </remarks>
             </summary>
        </member>
        <member name="T:ERPConnect.Queries.Query">
            <summary>
            Class for executing SAP Queries and retrieving the data.
            </summary>
        </member>
        <member name="M:ERPConnect.Queries.Query.#ctor(ERPConnect.R3Connection)">
            <summary>
            Constructs a new query object
            </summary>
            <param name="Connection">A valid connection object</param>
        </member>
        <member name="M:ERPConnect.Queries.Query.Execute">
            <summary>
            Executes the query and fills the Result property
            </summary>
        </member>
        <member name="M:ERPConnect.Queries.Query.ToString">
            <summary>
            Retrieves a textual description of the whole query structure
            </summary>
            <returns>Query structure</returns>
        </member>
        <member name="P:ERPConnect.Queries.Query.Name">
            <summary>
            Name of the query
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.Query.UserGroup">
            <summary>
            Name of the user group
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.Query.Variant">
            <summary>
            Name of the variant (if used)
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.Query.MaxRows">
            <summary>
            The maximum number of rows to be extracted (0 for all)
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.Query.WorkArea">
            <summary>
            The current query workspace
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.Query.Fields">
            <summary>
            Output fields of the query
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.Query.SelectionParameters">
            <summary>
            A collection of SelectParameters which represent the selection screen of the query
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.Query.Result">
            <summary>
            A ADO .NET DataTable which contains the data result
            </summary>
        </member>
        <member name="T:ERPConnect.Queries.WorkSpace">
            <summary>
            Enum for Query Work Areas
            </summary>
        </member>
        <member name="F:ERPConnect.Queries.WorkSpace.StandardArea">
            <summary>
            Standard Area (Client-specific)
            </summary>
        </member>
        <member name="F:ERPConnect.Queries.WorkSpace.GlobalArea">
            <summary>
            Global Area (Cross-client)
            </summary>
        </member>
        <member name="T:ERPConnect.Queries.QueryField">
            <summary>
            Zusammenfassung für QueryField.
            </summary>
        </member>
        <member name="M:ERPConnect.Queries.QueryField.#ctor">
            <summary>
            Constructs an empty Query field object
            </summary>
        </member>
        <member name="M:ERPConnect.Queries.QueryField.#ctor(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Constructs an QueryField object
            </summary>
            <param name="Name">Name of the field</param>
            <param name="ABAPType">ABAP type</param>
            <param name="Length">Length of field</param>
            <param name="Decimals">Number of decimals digits</param>
            <param name="Description">Description</param>
        </member>
        <member name="P:ERPConnect.Queries.QueryField.Name">
            <summary>
            Name of the field
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QueryField.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QueryField.ABAPType">
            <summary>
            ABAP type
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QueryField.Length">
            <summary>
            Length of field
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QueryField.Decimals">
            <summary>
            Number of decimals digits
            </summary>
        </member>
        <member name="T:ERPConnect.Queries.QueryFieldCollection">
            <summary>
            A collection of QueryField objects
            </summary>
        </member>
        <member name="M:ERPConnect.Queries.QueryFieldCollection.Add(ERPConnect.Queries.QueryField)">
            <summary>
            Adds a new object to the collection
            </summary>
            <param name="NewParameter"></param>
        </member>
        <member name="P:ERPConnect.Queries.QueryFieldCollection.Item(System.Int32)">
            <summary>
            Returns the QueryField object at the given position
            </summary>
            <param name="Index">The ordinal number of the object to be returned</param>
            <returns>The object at the given position</returns>
        </member>
        <member name="P:ERPConnect.Queries.QueryFieldCollection.Item(System.String)">
            <summary>
            Returns the QueryField object with the given name
            </summary>
            <param name="Name">The name of the object to be returned</param>
            <returns>The object with the given name</returns>
        </member>
        <member name="T:ERPConnect.Queries.QueryHelper.QueryHelper">
            <summary>
            This class provides several search functions for queries (e.g. variants...)
            </summary>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.QueryHelper.#ctor(ERPConnect.R3Connection)">
            <summary>
            Constructs a QueryHelper object
            </summary>
            <param name="Con">A valid R3Connection object</param>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.QueryHelper.SearchForQueries(ERPConnect.Queries.WorkSpace,System.String,System.String,System.String)">
            <summary>
            Searches for queries by using the given search patterns
            </summary>
            <param name="WorkSpace">Workspace local / global</param>
            <param name="SearchPatternUserGroup">Search pattern for the user group (you can use *)</param>
            <param name="SearchPatternQueryName">Search pattern for the query name (you can use *)</param>
            <param name="SearchPatternFunctionAreaName">Search pattern for the function area (you can use *)</param>
            <returns>A DataTable which contains the search result set</returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.QueryHelper.SearchForVariants(ERPConnect.Queries.WorkSpace,System.String,System.String)">
            <summary>
            Searches for variants to a given query
            </summary>
            <param name="WorkSpace">Workspace local / global</param>
            <param name="UserGroupName">Name of the user group</param>
            <param name="QueryName">Name of the query</param>
            <returns>SearchResultVariantsDataTable which contains the result set</returns>
            <example>
            
            [ C# ]
            <code>
            R3Connection con = new R3Connection( ... );
            
            con.Open();
            
            QueryHelper qh = new QueryHelper(con);
            SearchResultVariantsDataTable ret =  qh.SearchForVariants(WorkSpace.GlobalArea,"/SAPQUERY/MB","MEBESTWERTAN");
            
            Form1 f1 = new Form1();
            f1.dataGrid1.DataSource = ret;
            f1.ShowDialog();
            </code>
            
            </example>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.QueryHelper.SearchForUserGroups(ERPConnect.Queries.WorkSpace,System.String)">
            <summary>
            Searches for user groups
            </summary>
            <param name="WorkSpace">Workspace local / global</param>
            <param name="UserGroupSearchPattern">Search string for user groupy (you can use * as well)</param>
            <returns>SearchResultUserGroupsDataTable which contains the result set</returns>
            <example>
            The example below shows how to retrieve every user group in the system (search pattern *)
            
            <code>
            R3Connection con = new R3Connection("hamlet",11,"Theobald","pw","EN","800");
            
            con.Open();
            
            QueryHelper qh = new QueryHelper(con);
            SearchResultUserGroupsDataTable ret =  qh.SearchForUserGroups(WorkSpace.GlobalArea,"*");
            
            Form1 f1 = new Form1();
            f1.dataGrid1.DataSource = ret;
            f1.ShowDialog();
            
            </code>
            </example>
        </member>
        <member name="P:ERPConnect.Queries.QueryHelper.QueryHelper.Connection">
            <summary>
            Get / Sets an R3Connection object
            </summary>
        </member>
        <member name="T:ERPConnect.Queries.QueryHelper.SearchResultQueryDataTable">
            <summary>
            DataTable object
            </summary>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultQueryDataTable.AddSearchResultQueryRow(ERPConnect.Queries.QueryHelper.SearchResultQueryRow)">
            <summary>
            Add a new AddSearchResultQueryRow object to the table
            </summary>
            <param name="row">New AddSearchResultQueryRow object</param>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultQueryDataTable.AddSearchResultQueryRow(System.String,System.String,System.String)">
            <summary>
            Add a new AddSearchResultQueryRow object to the table
            </summary>
            <param name="QueryName">QueryName</param>
            <param name="UserGroup">UserGroup</param>
            <param name="DescriptionText">DescriptionText</param>
            <returns>-</returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultQueryDataTable.GetEnumerator">
            <summary>
            GetEnumerator() 
            </summary>
            <returns>System.Collections.IEnumerator</returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultQueryDataTable.Clone">
            <summary>
            Creates an empty Datatable object with the same structure
            </summary>
            <returns>Empty Datatable object</returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultQueryDataTable.CreateInstance">
            <summary>
            Creates a new object of the DataTable class
            </summary>
            <returns>The newly created object</returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultQueryDataTable.NewSearchResultQueryRow">
            <summary>
            Creates a new SearchResultQueryRow object
            </summary>
            <returns>New SearchResultQueryRow object</returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultQueryDataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            <summary>
            DataTable related method, please have a look at the manual provided by Microsoft
            </summary>
            <param name="builder">DataTable related method, please have a look at the manual provided by Microsoft</param>
            <returns>DataTable related method, please have a look at the manual provided by Microsoft</returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultQueryDataTable.GetRowType">
            <summary>
            DataTable related method, please have a look at the manual provided by Microsoft
            </summary>
            <returns>DataTable related method, please have a look at the manual provided by Microsoft</returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultQueryDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
            <summary>
            DataTable related method, please have a look at the manual provided by Microsoft
            </summary>
            <param name="e">DataTable related method, please have a look at the manual provided by Microsoft</param>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultQueryDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
            <summary>
            DataTable related method, please have a look at the manual provided by Microsoft
            </summary>
            <param name="e">DataTable related method, please have a look at the manual provided by Microsoft</param>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultQueryDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
            <summary>
            DataTable related method, please have a look at the manual provided by Microsoft
            </summary>
            <param name="e">DataTable related method, please have a look at the manual provided by Microsoft</param>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultQueryDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
            <summary>
            DataTable related method, please have a look at the manual provided by Microsoft
            </summary>
            <param name="e">DataTable related method, please have a look at the manual provided by Microsoft</param>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultQueryDataTable.RemoveSearchResultQueryRow(ERPConnect.Queries.QueryHelper.SearchResultQueryRow)">
            <summary>
            DataTable related method, please have a look at the manual provided by Microsoft
            </summary>
            <param name="row">DataTable related method, please have a look at the manual provided by Microsoft</param>
        </member>
        <member name="P:ERPConnect.Queries.QueryHelper.SearchResultQueryDataTable.Count">
            <summary>
            Returns the number of rows
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QueryHelper.SearchResultQueryDataTable.Item(System.Int32)">
            <summary>
            Returns a row at a given position
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:ERPConnect.Queries.QueryHelper.SearchResultQueryRow">
            <summary>
            The class repesents DataRow object for the result set when serching for SAP queries
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QueryHelper.SearchResultQueryRow.QueryName">
            <summary>
            Name of the Query
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QueryHelper.SearchResultQueryRow.UserGroup">
            <summary>
            User Group of the Query
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QueryHelper.SearchResultQueryRow.DescriptionText">
            <summary>
            Description Text
            </summary>
        </member>
        <member name="T:ERPConnect.Queries.QueryHelper.SearchResultVariantsDataTable">
            <summary>
            DataTable filled with the results of a query variant search
            </summary>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultVariantsDataTable.AddSearchResultVariantsRow(ERPConnect.Queries.QueryHelper.SearchResultVariantsRow)">
            <summary>
            AddSearchResultVariantsRow
            </summary>
            <param name="row">Row</param>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultVariantsDataTable.AddSearchResultVariantsRow(System.String,System.String)">
            <summary>
            AddSearchResultVariantsRow
            </summary>
            <param name="VariantName">VariantName</param>
            <param name="DescriptionText">DescriptionText</param>
            <returns></returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultVariantsDataTable.GetEnumerator">
            <summary>
            GetEnumerator()
            </summary>
            <returns>System.Collections.IEnumerator</returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultVariantsDataTable.Clone">
            <summary>
            Clone() 
            </summary>
            <returns>Clone() </returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultVariantsDataTable.CreateInstance">
            <summary>
            CreateInstance
            </summary>
            <returns>DataTable</returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultVariantsDataTable.NewSearchResultVariantsRow">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultVariantsDataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultVariantsDataTable.GetRowType">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultVariantsDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultVariantsDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultVariantsDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultVariantsDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultVariantsDataTable.RemoveSearchResultVariantsRow(ERPConnect.Queries.QueryHelper.SearchResultVariantsRow)">
            <summary>
            
            </summary>
            <param name="row"></param>
        </member>
        <member name="P:ERPConnect.Queries.QueryHelper.SearchResultVariantsDataTable.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QueryHelper.SearchResultVariantsDataTable.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:ERPConnect.Queries.QueryHelper.SearchResultVariantsRow">
            <summary>
            
            </summary>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultVariantsRow.IsVariantNameNull">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultVariantsRow.SetVariantNameNull">
            <summary>
            
            </summary>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultVariantsRow.IsDescriptionTextNull">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultVariantsRow.SetDescriptionTextNull">
            <summary>
            
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QueryHelper.SearchResultVariantsRow.VariantName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QueryHelper.SearchResultVariantsRow.DescriptionText">
            <summary>
            
            </summary>
        </member>
        <member name="T:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsDataTable">
            <summary>
            
            </summary>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsDataTable.AddSearchResultUserGroupsRow(ERPConnect.Queries.QueryHelper.SearchResultUserGroupsRow)">
            <summary>
            
            </summary>
            <param name="row"></param>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsDataTable.AddSearchResultUserGroupsRow(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="UserGroup"></param>
            <param name="DescriptionText"></param>
            <returns></returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsDataTable.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsDataTable.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsDataTable.CreateInstance">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsDataTable.NewSearchResultUserGroupsRow">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsDataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsDataTable.GetRowType">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsDataTable.RemoveSearchResultUserGroupsRow(ERPConnect.Queries.QueryHelper.SearchResultUserGroupsRow)">
            <summary>
            
            </summary>
            <param name="row"></param>
        </member>
        <member name="P:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsDataTable.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsDataTable.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsRow">
            <summary>
            
            </summary>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsRow.IsUserGroupNull">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsRow.SetUserGroupNull">
            <summary>
            
            </summary>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsRow.IsDescriptionTextNull">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsRow.SetDescriptionTextNull">
            <summary>
            
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsRow.UserGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QueryHelper.SearchResultUserGroupsRow.DescriptionText">
            <summary>
            
            </summary>
        </member>
        <member name="T:ERPConnect.Queries.QuerySelectionParameter">
            <summary>
            Zusammenfassung für QuerySelection.
            </summary>
        </member>
        <member name="M:ERPConnect.Queries.QuerySelectionParameter.#ctor">
            <summary>
            Constructs a new QuerySelectionParameter object
            </summary>
        </member>
        <member name="M:ERPConnect.Queries.QuerySelectionParameter.#ctor(System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean,ERPConnect.Queries.Kind)">
            <summary>
            Constructs a new QuerySelectionParameter object
            </summary>
            <param name="Name"></param>
            <param name="FieldName"></param>
            <param name="DescriptionText"></param>
            <param name="Length"></param>
            <param name="Obligatory"></param>
            <param name="NoDisplay"></param>
            <param name="Kind"></param>
        </member>
        <member name="M:ERPConnect.Queries.QuerySelectionParameter.AddRange(ERPConnect.Queries.Sign,ERPConnect.Queries.RangeOption,System.String,System.String)">
            <summary>
            Adds a new Range object to the Ranges collection
            </summary>
            <param name="Sign">Sign Inlcude / Exclude</param>
            <param name="Option">Option (e.g. Equals, GreaterThan...)</param>
            <param name="LowValue">The first / low value</param>
            <param name="HighValue">The second / high value (only needed when Option is bt for between)</param>
        </member>
        <member name="M:ERPConnect.Queries.QuerySelectionParameter.AddRange(ERPConnect.Queries.Sign,ERPConnect.Queries.RangeOption,System.String)">
            <summary>
            Adds a new Range object to the Ranges collection
            </summary>
            <param name="Sign">Sign Inlcude / Exclude</param>
            <param name="Option">Option (e.g. Equals, GreaterThan...)</param>
            <param name="Value">The value</param>
        </member>
        <member name="M:ERPConnect.Queries.QuerySelectionParameter.AddRange(System.String)">
            <summary>
            Adds a new Range object to the Ranges collection
            </summary>
            <param name="Value">The value</param>
        </member>
        <member name="P:ERPConnect.Queries.QuerySelectionParameter.Name">
            <summary>
            The unique name of the parameter
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QuerySelectionParameter.FieldName">
            <summary>
            The name of the field
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QuerySelectionParameter.DescriptionText">
            <summary>
            A description text
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QuerySelectionParameter.ABAPType">
            <summary>
            The ABAP type (e.g. C,N,I....)
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QuerySelectionParameter.Length">
            <summary>
            The length of the value, if it is not numeric
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QuerySelectionParameter.Obligatory">
            <summary>
            Determines whether the value is obligatory
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QuerySelectionParameter.NoDisplay">
            <summary>
            Determines whether the Selection Parameter is not displayed on a normal selection screen
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QuerySelectionParameter.Kind">
            <summary>
            Determines if the Selection Parameter is a Select Option or only a single Parameter
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.QuerySelectionParameter.Ranges">
            <summary>
            The Range collection associated with this QuerySelectionParameter object
            </summary>
        </member>
        <member name="T:ERPConnect.Queries.QuerySelectionParameterCollection">
            <summary>
            A collection to store  QuerySelectionParameter objects
            </summary>
        </member>
        <member name="M:ERPConnect.Queries.QuerySelectionParameterCollection.Add(ERPConnect.Queries.QuerySelectionParameter)">
            <summary>
            Adds a new QuerySelectionParameter object to the collection
            </summary>
            <param name="NewParameter">Existing QuerySelectionParameter object</param>
        </member>
        <member name="P:ERPConnect.Queries.QuerySelectionParameterCollection.Item(System.Int32)">
            <summary>
            Returns a QuerySelectionParameter object at the given position of the collection
            </summary>
            <param name="Index">Ordinal number</param>
            <returns>A QuerySelectionParameter object</returns>
        </member>
        <member name="P:ERPConnect.Queries.QuerySelectionParameterCollection.Item(System.String)">
            <summary>
            Returns a QuerySelectionParameter object with the given name
            </summary>
            <param name="Name">The name of the QuerySelectionParameter object to be returned</param>
            <returns>The QuerySelectionParameter object with the given name</returns>
        </member>
        <member name="T:ERPConnect.Queries.Kind">
            <summary>
            Enum for the two kinds of selection parameters
            </summary>
        </member>
        <member name="F:ERPConnect.Queries.Kind.SelectOption">
            <summary>
            Select Option
            </summary>
        </member>
        <member name="F:ERPConnect.Queries.Kind.Parameter">
            <summary>
            Parameter
            </summary>
        </member>
        <member name="T:ERPConnect.Queries.Range">
            <summary>
            Zusammenfassung für QuerySelectionRange.
            </summary>
        </member>
        <member name="M:ERPConnect.Queries.Range.#ctor">
            <summary>
            Constructs a new Range object
            </summary>
        </member>
        <member name="M:ERPConnect.Queries.Range.#ctor(ERPConnect.Queries.Sign,ERPConnect.Queries.RangeOption,System.String,System.String)">
            <summary>
            Constructs a new Range object
            </summary>
            <param name="Sign">Sign (e.g. Include)</param>
            <param name="Option">Option (e.g. Between)</param>
            <param name="LowValue">The low value of this Range object</param>
            <param name="HighValue">The high value of this Range object</param>
        </member>
        <member name="P:ERPConnect.Queries.Range.Sign">
            <summary>
            Sign (e.g. Include)
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.Range.Option">
            <summary>
            Option (e.g. Between)
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.Range.LowValue">
            <summary>
            The low value of this Range object
            </summary>
        </member>
        <member name="P:ERPConnect.Queries.Range.HighValue">
            <summary>
            The high value of this Range object
            </summary>
        </member>
        <member name="T:ERPConnect.Queries.RangeCollection">
            <summary>
            This class repesents a collection of Range objects
            </summary>
        </member>
        <member name="M:ERPConnect.Queries.RangeCollection.Add(ERPConnect.Queries.Range)">
            <summary>
            Adds a new Range object to the collection
            </summary>
            <param name="NewParameter">The Range object to be added</param>
        </member>
        <member name="M:ERPConnect.Queries.RangeCollection.Add(ERPConnect.Queries.Sign,ERPConnect.Queries.RangeOption,System.String,System.String)">
            <summary>
            Creates a new Range object and adds it to the collection
            </summary>
            <param name="Sign">Sign (e.g. Include)</param>
            <param name="Option">Option (e.g. Between)</param>
            <param name="LowValue">The low value of the Range object</param>
            <param name="HighValue">The high value of the Range object</param>
        </member>
        <member name="M:ERPConnect.Queries.RangeCollection.Add(ERPConnect.Queries.Sign,ERPConnect.Queries.RangeOption,System.String)">
            <summary>
            Creates a new Range object and adds it to the collection
            </summary>
            <param name="Sign">Sign (e.g. Include)</param>
            <param name="Option">Option (e.g. Between)</param>
            <param name="Value">The value of the Range object</param>
        </member>
        <member name="M:ERPConnect.Queries.RangeCollection.Add(System.String)">
            <summary>
            Creates a new Range object and adds it to the collection
            </summary>
            <param name="Value">Value</param>
        </member>
        <member name="P:ERPConnect.Queries.RangeCollection.Item(System.Int32)">
            <summary>
            Returns the Range object at the given index
            </summary>
            <param name="Index">The indes</param>
            <returns>The object located at the index</returns>
        </member>
        <member name="T:ERPConnect.Queries.Sign">
            <summary>
            Enum for options for including or excluding values of ranges.
            </summary>
        </member>
        <member name="F:ERPConnect.Queries.Sign.Include">
            <summary>
            Include
            </summary>
        </member>
        <member name="F:ERPConnect.Queries.Sign.Exclude">
            <summary>
            Exclude
            </summary>
        </member>
        <member name="T:ERPConnect.Queries.RangeOption">
            <summary>
            Enum for logical operators
            </summary>
        </member>
        <member name="F:ERPConnect.Queries.RangeOption.Equals">
            <summary>
            Equals / =
            </summary>
        </member>
        <member name="F:ERPConnect.Queries.RangeOption.NotEquals">
            <summary>
            Not Equals / !=
            </summary>
        </member>
        <member name="F:ERPConnect.Queries.RangeOption.GreaterThan">
            <summary>
            Greater Than / >
            </summary>
        </member>
        <member name="F:ERPConnect.Queries.RangeOption.LessThan">
            <summary>
            Less Than 
            </summary>
        </member>
        <member name="F:ERPConnect.Queries.RangeOption.GreaterThanOrEqualTo">
            <summary>
            Greater Than Or Equal To  / 
            </summary>
        </member>
        <member name="F:ERPConnect.Queries.RangeOption.LessThanOrEqualTo">
            <summary>
            Less Than Ot Equal To 
            </summary>
        </member>
        <member name="F:ERPConnect.Queries.RangeOption.Between">
            <summary>
            Between
            </summary>
        </member>
        <member name="F:ERPConnect.Queries.RangeOption.NotBetween">
            <summary>
            Not Between / 
            </summary>
        </member>
        <member name="F:ERPConnect.Queries.RangeOption.MatchesPattern">
            <summary>
            Matches Pattern
            </summary>
        </member>
        <member name="F:ERPConnect.Queries.RangeOption.NotMatchesPattern">
            <summary>
            Not Patches Pattern
            </summary>
        </member>
        <member name="T:ERPConnect.Utils.ReadTable">
            <summary>
            This class is for reading SAP database tables directly
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.ReadTable.#ctor(ERPConnect.R3Connection)">
            <summary>
            Constucts a ReadTable object by providing a valid SAP R/3 connection
            </summary>
            <param name="Connection">A valid R3Connection object</param>
        </member>
        <member name="M:ERPConnect.Utils.ReadTable.#ctor">
            <summary>
            Constucts a ReadTable object
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.ReadTable.AddField(System.String)">
            <summary>
            Adds one more table field to be extracted
            </summary>
            <param name="FieldName">Name of DDIC table field</param>
        </member>
        <member name="M:ERPConnect.Utils.ReadTable.AddCriteria(System.String)">
            <summary>
            Adds one more line to the SQL statement, that is used for fetching the data.
            </summary>
            <param name="SQL">SQL statement (max 72 characters due to technical reason)</param>
        </member>
        <member name="M:ERPConnect.Utils.ReadTable.SetCustomFunctionName(System.String)">
            <summary>
            Use this function to define a custome function to retrieve the data
            </summary>
            <param name="FunctionName">Name of the custom function module</param>
        </member>
        <member name="M:ERPConnect.Utils.ReadTable.ActivateOHSExtraction(System.Int32)">
            <summary>
            Do never ever use this function!!!!!!
            </summary>
            <param name="RequestID"></param>
        </member>
        <member name="M:ERPConnect.Utils.ReadTable.ActivateBackgroundExtraction(System.String,System.String)">
            <summary>
             Do never ever use this function!!!!!!
            </summary>
            <param name="BackgroundRequestID"></param>
        </member>
        <member name="M:ERPConnect.Utils.ReadTable.Run">
            <summary>
            Executes the query. Please make sure to catch possible exceptions.
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.ReadTable.RetrieveAllFieldsOfTable">
            <summary>
            Retrieves all fields of the given table into the Fields collection
            </summary>
        </member>
        <member name="E:ERPConnect.Utils.ReadTable.PackageProgress">
            <summary>
            PackageProgress is fired, when addtional data packages are fetched from SAP.
            </summary>
        </member>
        <member name="E:ERPConnect.Utils.ReadTable.IncomingPackage">
            <summary>
            IncomingPackage is fired, when addtional data packages are fetched from SAP.
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.ReadTable.Connection">
            <summary>
            Gets / sets the R3Connection object which is assigned to the ReadTable object
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.ReadTable.TableName">
            <summary>
            Name of the table to be read.
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.ReadTable.UsePrimaryKeyPackaging">
            <summary>
            Set this property to true to use the packaging feature via primary key
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.ReadTable.RaiseIncomingPackageEvent">
            <summary>
            Set this property to raise the IncomingPackage event instead of filling the Result dataset
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.ReadTable.RowSkip">
            <summary>
            Number of rows to be skiped.
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.ReadTable.RowCount">
            <summary>
            Number of rows to maximal retrieved.
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.ReadTable.Fields">
            <summary>
            Represents the fields that are retrieved. This collection will be filled and / or refreshed during the call. Please use AddField to add a field.
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.ReadTable.Result">
            <summary>
            Result of the query
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.ReadTable.WhereClause">
            <summary>
            If you don't want to add single criterias using the AddCriteria method, fill WhereClause for a single criteria string
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.ReadTable.PackageSize">
            <summary>
            There will be more than one call according to this package size by setting PackageSize greater 0.
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.ReadTable.Delimiter">
            <summary>
            Use this delimeter if you have problems with arabic characters to correct the data (e.g. with a pipe |)
            </summary>
        </member>
        <member name="T:ERPConnect.Utils.ReadTable.OnPackageProgress">
            <exclude/>
        </member>
        <member name="T:ERPConnect.Utils.ReadTable.OnIncomingPackage">
            <exclude/>
        </member>
        <member name="T:ERPConnect.Utils.ReadTableField">
            <summary>
            Represents a field in a RaedTable result set
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.ReadTableField.#ctor">
            <summary>
            Constructs a new ReadTableField object
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.ReadTableField.#ctor(System.String,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Constructs a new ReadTableField object
            </summary>
            <param name="FieldName">Name of the field</param>
            <param name="Length">Length of the field</param>
            <param name="ABAPType">ABAP type of the field</param>
            <param name="FieldText">Short description</param>
            <param name="Decimals">Number of decimal digits</param>
        </member>
        <member name="P:ERPConnect.Utils.ReadTableField.FieldName">
            <summary>
            Name of the field
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.ReadTableField.Length">
            <summary>
            Length of the field
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.ReadTableField.Decimals">
            <summary>
            Number of decimal digits
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.ReadTableField.ABAPType">
            <summary>
            ABAP type of the field
            </summary>
        </member>
        <member name="P:ERPConnect.Utils.ReadTableField.FieldText">
            <summary>
            Short description
            </summary>
        </member>
        <member name="T:ERPConnect.Utils.ReadTableFieldCollection">
            <summary>
            Represents a collection of ReadTableField objects
            </summary>
        </member>
        <member name="M:ERPConnect.Utils.ReadTableFieldCollection.Add(ERPConnect.Utils.ReadTableField)">
            <summary>
            Adds a new ReadTableField object to the collection
            </summary>
            <param name="NewParameter">The ReadTableField object to be added</param>
        </member>
        <member name="P:ERPConnect.Utils.ReadTableFieldCollection.Item(System.Int32)">
            <summary>
            Returns the ReadTableField object at the given position
            </summary>
        </member>
        <member name="T:ERPConnect.SAPCodepage6300">
            <summary>
            Represents a SAP codepage 6300 encoding, a blend of Latin 1 and Shift JIS
            </summary>
        </member>
        <member name="T:ERPConnect.RFCServer">
            <summary>
            RFCServer represents a running server, that can handle incoming RFC calls from a superposed SAP system
            </summary>
        </member>
        <member name="M:ERPConnect.RFCServer.#ctor">
            <summary>
            Initializes a RFCServer object
            </summary>
        </member>
        <member name="M:ERPConnect.RFCServer.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a RFCServer object
            </summary>
            <param name="gatewayHost">Name of the Gateway host</param>
            <param name="gatewayService">Name of the Gateway service ("sapgwXX" -> XX = system number)</param>
            <param name="programId">Program ID as definied in SM59</param>
        </member>
        <member name="M:ERPConnect.RFCServer.#ctor(System.String)">
            <summary>
            Initializes a RFCServer object
            </summary>
            <param name="connectionString">Connection String</param>
        </member>
        <member name="M:ERPConnect.RFCServer.#ctor(System.String,System.String,System.String,ERPConnect.SNCSettings)">
            <summary>
            Initializes a RFCServer object
            </summary>
            <param name="gatewayHost">Name of the Gateway host</param>
            <param name="gatewayService">Name of the Gateway service ("sapgwXX" -> XX = system number)</param>
            <param name="programId">Program ID as definied in SM59</param>
            <param name="sncSettings">Settings for SNC</param>
        </member>
        <member name="M:ERPConnect.RFCServer.Start">
            <summary>
            Starts the server. 
            </summary>
            <remarks>
            Please make sure to have all server functions definied, before starting the server.
            </remarks>
        </member>
        <member name="M:ERPConnect.RFCServer.Start(System.Boolean)">
            <summary>
            Starts the server. 
            </summary>
            <remarks>
            Please make sure to have all server functions defined, before starting the server.
            </remarks>
            <param name="blocking">Defines whether the server should run in an own thread (false) or not (true).</param>
        </member>
        <member name="M:ERPConnect.RFCServer.Stop">
            <summary>
            Stop the running server
            </summary>
            <remarks>
            Have a look at <see cref="M:ERPConnect.RFCServer.Start">ERPConnect.RFCServer.Start</see> for a complete example.
            </remarks>
        </member>
        <member name="M:ERPConnect.RFCServer.Ping">
            <summary>
            DO NOT USE!!! FOR INTERNAL USE ONLY!!!
            </summary>
            <returns>True if one or more RFCServers are registered for ProgramID, false otherwise</returns>
        </member>
        <member name="M:ERPConnect.RFCServer.CancelRegisteredServers">
            <summary>
            Ends all servers that are registered with the given Program ID at the SAP Host
            </summary>
        </member>
        <member name="P:ERPConnect.RFCServer.Protocol">
            <summary>
            Gets or sets the communication protocol/API
            </summary>
        </member>
        <member name="P:ERPConnect.RFCServer.LogDir">
            <summary>
            If this directory is set, every call will be saved there in a XML file
            </summary>
        </member>
        <member name="P:ERPConnect.RFCServer.IsRunning">
            <summary>
            Defines, whether the server thread is running at the moment
            </summary>
            <remarks>
            Have a look at <see cref="M:ERPConnect.RFCServer.Start">ERPConnect.RFCServer.Start</see> for a complete example.
            </remarks>
        </member>
        <member name="P:ERPConnect.RFCServer.Logging">
            <summary>
            Defines, if the calls will be logged to local trace file.
            </summary>
        </member>
        <member name="P:ERPConnect.RFCServer.GatewayHost">
            <summary>
            Name of the gatewayhost
            </summary>
            <remarks>
            Have a look at <see cref="M:ERPConnect.RFCServer.Start">ERPConnect.RFCServer.Start</see> for a complete example.
            </remarks>
        </member>
        <member name="P:ERPConnect.RFCServer.GatewayService">
            <summary>
            Name of the gateysevice ("sapgwXX" replace XX by the SAP system number)
            </summary>
            <remarks>
            Have a look at <see cref="M:ERPConnect.RFCServer.Start">ERPConnect.RFCServer.Start</see> for a complete example.
            </remarks>
        </member>
        <member name="P:ERPConnect.RFCServer.ProgramID">
            <summary>
            ProgrammID as definied in the RFC destintion (Transaction SM59)
            </summary>
            <remarks>
            Have a look at <see cref="M:ERPConnect.RFCServer.Start">ERPConnect.RFCServer.Start</see> for a complete example.
            </remarks>
        </member>
        <member name="P:ERPConnect.RFCServer.SNCSettings">
            <summary>
            Gets or sets the settings for SNC
            </summary>
        </member>
        <member name="P:ERPConnect.RFCServer.RegisteredFunctions">
            <summary>
            A collection of all RFCServerFunction objects that the connected SAP system can call.
            </summary>
            <remarks>
            Have a look at <see cref="M:ERPConnect.RFCServer.Start">ERPConnect.RFCServer.Start</see> for a complete example.
            </remarks>
        </member>
        <member name="P:ERPConnect.RFCServer.CanReceiveIdocs">
            <summary>
            Defines, whether the server object should be able to receive idocs.
            </summary>
        </member>
        <member name="P:ERPConnect.RFCServer.LastTID">
            <summary>
            Transaction ID of last incoming call
            </summary>
        </member>
        <member name="P:ERPConnect.RFCServer.IsUnicode">
            <summary>
            Defines whether the partner system is a unicode system
            </summary>
        </member>
        <member name="E:ERPConnect.RFCServer.IncomingCall">
            <summary>
            IncomingCall is fired, when the SAP system call the RFC server
            </summary>
        </member>
        <member name="E:ERPConnect.RFCServer.InternalException">
            <summary>
            An error occured within the server object while the server is running
            </summary>
        </member>
        <member name="E:ERPConnect.RFCServer.TRFCCheckTID">
            <summary>
            TRFCCheckTID is fired, when the SAP system wants the client to check, if a call can be sent.
            </summary>
        </member>
        <member name="E:ERPConnect.RFCServer.TRFCCommit">
            <summary>
            TRFCCommit is fired, when the SAP system wants to have an Transaktion comitted
            </summary>
        </member>
        <member name="E:ERPConnect.RFCServer.TRFCRollback">
            <summary>
            TRFCRollback is fired, when the SAP system a transaction to be rolled back due to an error.
            </summary>
        </member>
        <member name="E:ERPConnect.RFCServer.TRFCConfirm">
            <summary>
            TRFCConfirm is fired, when the SAP system a transaction to be rolled back due to an error.
            </summary>
        </member>
        <member name="E:ERPConnect.RFCServer.IncomingIdoc">
            <summary>
            IncomingIdoc is fired, when the SAP system calls the RFC Server to send an idoc
            </summary>
        </member>
        <member name="E:ERPConnect.RFCServer.UnknownIncomingFunction">
            <summary>
            UnknownIncomingFunction is fired, when the SAP system calls a function module that is not contained in the RegisteredFunctions collection.
            </summary>
        </member>
        <member name="E:ERPConnect.RFCServer.Authorizing">
            <summary>
            Authorizing is fired, when the RFC Server is authorizing an incoming function call. 
            If this event has no subscribers, all calls are authorized. 
            Otherwise AuthorizingEventArgs.IsAuthorized must be set to 'true' to authorize a call.
            </summary>
        </member>
        <member name="T:ERPConnect.RFCServer.AuthorizingEventArgs">
            <summary>
            Arguments for OnAuthorizing event
            </summary>
        </member>
        <member name="T:ERPConnect.RFCServerException">
            <summary>
            This class provides a SAP exception which is thrown into the SAP system during a server call. Please make sure to fill the ABAPException properly before throwing in a way, that SAP unterstands ...
            </summary>
        </member>
        <member name="F:ERPConnect.RFCServerException.ABAPException">
            <summary>
            ABAP exception
            </summary>
        </member>
        <member name="M:ERPConnect.RFCServerException.#ctor(System.String)">
            <summary>
            initializes a new RFCServerException object
            </summary>
            <param name="AbapException">String that appears as system exception in the calling SAP system</param>
        </member>
        <member name="T:ERPConnect.RFCServerFunction">
            <summary>
            RFCServerFunction represents a single function that can be assigned to an RFCServer object
            </summary>
        </member>
        <member name="M:ERPConnect.RFCServerFunction.#ctor(System.String)">
            <summary>
            Initializes a new RFCServerFunction object. You can also use RFCServer.RegisteredFunctions.add()
            </summary>
            <param name="functionName">Name of the function module to be called by SAP system</param>
        </member>
        <member name="M:ERPConnect.RFCServerFunction.SaveToXML(System.String)">
            <summary>
            Saves the current object to XML
            </summary>
            <param name="Filename">File name</param>
        </member>
        <member name="M:ERPConnect.RFCServerFunction.LoadFromXML(System.String)">
            <summary>
            Load an RFCFunction object hierachy from an XML file
            </summary>
            <param name="FileName">Filename</param>
        </member>
        <member name="M:ERPConnect.RFCServerFunction.LoadFromXML(System.IO.StreamReader)">
            <summary>
            Load an RFCFunction object hierachy from an XML file
            </summary>
            <param name="reader">StreamReader to XML resource</param>
        </member>
        <member name="P:ERPConnect.RFCServerFunction.FunctionName">
            <summary>
            Name of the function module
            </summary>
        </member>
        <member name="P:ERPConnect.RFCServerFunction.UseTRFC">
            <summary>
            Defines whether transactional RFC is expected or not.
            </summary>
        </member>
        <member name="P:ERPConnect.RFCServerFunction.Imports">
            <summary>
            A collection of RFCParameter objects that represents the import parameters that are exchanged during a call.
            </summary>
        </member>
        <member name="P:ERPConnect.RFCServerFunction.Exports">
            <summary>
            A collection of RFCParameter objects that represents the export parameters that are exchanged during a call.
            </summary>
        </member>
        <member name="P:ERPConnect.RFCServerFunction.Tables">
            <summary>
            A collection of RFCTable objects that represents the table parameters that are exchanged during a call.
            </summary>
        </member>
        <member name="T:ERPConnect.RFCServerFunctionCollection">
            <summary>
            A set of RFCServerFunction objects
            </summary>
        </member>
        <member name="M:ERPConnect.RFCServerFunctionCollection.Add(ERPConnect.RFCServerFunction)">
            <summary>
            Adds a new Item to the Collection
            </summary>
            <param name="rfcServerFunction">RFCServerFunction to be added</param>
        </member>
        <member name="M:ERPConnect.RFCServerFunctionCollection.Add(System.String)">
            <summary>
            Adds a new function object to the collection
            </summary>
            <param name="functionName">Name of the function module to be added</param>
            <returns>A newly created RFCServerFunction object</returns>
        </member>
        <member name="P:ERPConnect.RFCServerFunctionCollection.Item(System.Int32)">
            <summary>
            Returns a RFCServerFunction object at a given position
            </summary>
            <param name="index">Index of the RFCServerFunction in the collection</param>
        </member>
        <member name="T:ERPConnect.Linq.ERPColumnAttribute">
            <summary>
            This attribute is used to set the original column name.
            </summary>
        </member>
        <member name="M:ERPConnect.Linq.ERPColumnAttribute.#ctor(System.String)">
            <summary>
            Initializes an instance of the ERPColumnAttribute class with a given original column name.
            </summary>
            <param name="name">The name of the original column.</param>
        </member>
        <member name="P:ERPConnect.Linq.ERPColumnAttribute.Name">
            <summary>
            Gets or sets the name of the original column.
            </summary>
        </member>
        <member name="T:ERPConnect.Linq.ERPDataContext">
            <summary>
            Represents the main entry point for the LINQ to ERP framework. 
            </summary>
        </member>
        <member name="M:ERPConnect.Linq.ERPDataContext.#ctor">
            <summary>
            Initializes a new instance of the ERPDataContext class.
            </summary>
        </member>
        <member name="M:ERPConnect.Linq.ERPDataContext.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ERPDataContext class with a given connection string.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:ERPConnect.Linq.ERPDataContext.#ctor(System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ERPDataContext class with given connection data values.
            </summary>
            <param name="host">The host value.</param>
            <param name="system">The system value.</param>
            <param name="username">The username value.</param>
            <param name="password">The password value.</param>
            <param name="language">The language value.</param>
            <param name="client">The client value.</param>
        </member>
        <member name="M:ERPConnect.Linq.ERPDataContext.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ERPDataContext class with given connection data values.
            </summary>
            <param name="httpUrl">The HTTP-URL value.</param>
            <param name="username">The username value.</param>
            <param name="password">The password value.</param>
            <param name="language">The language value.</param>
            <param name="client">The client value.</param>
        </member>
        <member name="M:ERPConnect.Linq.ERPDataContext.Finalize">
            <summary>
            Please refer to the Microsoft documentation as this is a non-ERPConnect method or property
            </summary>
        </member>
        <member name="M:ERPConnect.Linq.ERPDataContext.Dispose">
            <summary>
            Releases all resources used by the ERPDataContext.
            </summary>
        </member>
        <member name="M:ERPConnect.Linq.ERPDataContext.Dispose(System.Boolean)">
            <summary>
            Please refer to the Microsoft documentation as this is a non-ERPConnect method or property
            </summary>
            <param name="disposing">Please refer to the Microsoft documentation as this is a non-ERPConnect method or property</param>
        </member>
        <member name="M:ERPConnect.Linq.ERPDataContext.CheckDispose">
            <summary>
            Please refer to the Microsoft documentation as this is a non-ERPConnect method or property
            </summary>
        </member>
        <member name="M:ERPConnect.Linq.ERPDataContext.GetTable``1">
            <summary>
            Returns a collection of objects of a particular type, where the type is defined by the 
            TEntity parameter.
            </summary>
            <returns>A collection of objects.</returns>
        </member>
        <member name="M:ERPConnect.Linq.ERPDataContext.GetTable``1(System.Boolean)">
            <summary>
            Returns a collection of objects of a particular type, where the type is defined by the 
            TEntity parameter.
            </summary>
            <param name="useMultibyteExtraction">Use multibyte extraction</param>
            <returns>A collection of objects.</returns>
        </member>
        <member name="P:ERPConnect.Linq.ERPDataContext.Connection">
            <summary>
            Gets or sets the R3Connection used by this instance of the ERPDataContext.
            </summary>
        </member>
        <member name="P:ERPConnect.Linq.ERPDataContext.AutoCloseConnection">
            <summary>
            Gets or sets a value indicating whether to auto-close the connection at disposal.
            </summary>
        </member>
        <member name="P:ERPConnect.Linq.ERPDataContext.Log">
            <summary>
            Gets and sets the logger object.
            </summary>
        </member>
        <member name="T:ERPConnect.Linq.ERPExtensions">
            <summary>
            Represents a ERPConnect exception thrown during the execution of LINQ to ERP commands. This 
            class cannot be inherited.
            </summary>
        </member>
        <member name="M:ERPConnect.Linq.ERPExtensions.InList(System.String,System.String[])">
            <summary>
            This method extends the String object and checks if the current string is contained in
            the given list values.
            </summary>
            <param name="s">The main String object</param>
            <param name="values">The value list to check against</param>
            <returns>Returns True if the current String is in the value list</returns>
        </member>
        <member name="M:ERPConnect.Linq.ERPExtensions.ToSAPDate(System.String)">
            <summary>
            This method extends the String object and checks if the current string is containing
            a valid SAP date format (YYYYMMDD) and is converting it into an integer. This method
            is used to support date comparison with LINQ to ERP.
            </summary>
            <param name="s">The main String object</param>
            <returns>Returns the date as integer, otherwise -1</returns>
        </member>
        <member name="T:ERPConnect.Linq.ERPTable`1">
            <summary>
            Represents a table for a particular type in the underlying SAP system database.
            </summary>
        </member>
        <member name="M:ERPConnect.Linq.ERPTable`1.#ctor(ERPConnect.R3Connection)">
            <summary>
            Initializes a new instance of the ERPTable class with a given R3Connection.
            </summary>
            <param name="connection">The R3Connection instance.</param>
        </member>
        <member name="M:ERPConnect.Linq.ERPTable`1.#ctor(ERPConnect.R3Connection,System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the ERPTable class with a given R3Connection 
            and logger object.
            </summary>
            <param name="connection">The R3Connection instance.</param>
            <param name="log">The logger instance.</param>
        </member>
        <member name="M:ERPConnect.Linq.ERPTable`1.#ctor(ERPConnect.R3Connection,System.IO.TextWriter,System.Boolean)">
            <summary>
            Initializes a new instance of the ERPTable class with a given R3Connection, 
            logger object and a value indicating to use the multibyte extraction
            </summary>
            <param name="connection">The R3Connection instance.</param>
            <param name="log">The logger instance.</param>
            <param name="useMultibyteExtraction">A value indicating to use multibyte extraction.</param>
        </member>
        <member name="M:ERPConnect.Linq.ERPTable`1.#ctor(ERPConnect.Linq.ERPDataContext,System.Boolean)">
            <summary>
            Initializes a new instance of the ERPTable class with a given ERPDataContext 
            </summary>
            <param name="context">The ERPDataContext instance.</param>
            <param name="useMultibyteExtraction">A value indicating to use multibyte extraction.</param>
        </member>
        <member name="M:ERPConnect.Linq.ERPTable`1.CreateQuery``1(System.Linq.Expressions.Expression)">
            <summary>
            Constructs an IQueryable object that can evaluate the query represented 
            by a specified expression tree.
            </summary>
            <param name="expression">An expression tree that represents a LINQ 
            query.</param>
            <returns>An IQueryable that can evaluate the query represented by the 
            specified expression tree.</returns>
        </member>
        <member name="M:ERPConnect.Linq.ERPTable`1.CreateQuery(System.Linq.Expressions.Expression)">
            <summary>
            Constructs an IQueryable object that can evaluate the query represented 
            by a specified expression tree.
            </summary>
            <param name="expression">An expression tree that represents a LINQ 
            query.</param>
            <returns>An IQueryable that can evaluate the query represented by the 
            specified expression tree.</returns>
        </member>
        <member name="M:ERPConnect.Linq.ERPTable`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
        </member>
        <member name="M:ERPConnect.Linq.ERPTable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
        </member>
        <member name="M:ERPConnect.Linq.ERPTable`1.GetResults">
            <summary>
            Enumerates the results of the executed table query.
            </summary>
        </member>
        <member name="M:ERPConnect.Linq.ERPTable`1.Execute``1(System.Linq.Expressions.Expression)">
            <summary>
            Executes the strongly-typed query represented by a specified expression tree.
            </summary>
            <typeparam name="TResult">The type of the value that results from executing 
            the query.</typeparam>
            <param name="expression">An expression tree that represents a LINQ 
            query.</param>
            <returns>The value that results from executing the specified query.</returns>
        </member>
        <member name="M:ERPConnect.Linq.ERPTable`1.Execute(System.Linq.Expressions.Expression)">
            <summary>
            Executes the query represented by a specified expression tree.
            </summary>
            <param name="expression">An expression tree that represents a LINQ 
            query.</param>
            <returns>The value that results from executing the specified query.</returns>
        </member>
        <member name="M:ERPConnect.Linq.ERPTable`1.GetList">
            <summary>
            Returns an IList that can be bound to a data source.
            </summary>
            <returns>Returns the collection.</returns>
        </member>
        <member name="P:ERPConnect.Linq.ERPTable`1.Connection">
            <summary>
            Gets the connection object used to connect the underlying database.
            </summary>
        </member>
        <member name="P:ERPConnect.Linq.ERPTable`1.Log">
            <summary>
            Gets and sets the logger object.
            </summary>
        </member>
        <member name="P:ERPConnect.Linq.ERPTable`1.Expression">
            <summary>
            Gets the expression tree that is associated with the instance of IQueryable.
            </summary>
        </member>
        <member name="P:ERPConnect.Linq.ERPTable`1.ElementType">
            <summary>
            Gets the type of the element(s) that are returned when the expression tree 
            associated with this instance of IQueryable is executed.
            </summary>
        </member>
        <member name="P:ERPConnect.Linq.ERPTable`1.ContainsListCollection">
            <summary>
            Gets a value indicating whether the collection is a collection of IList objects.
            </summary>
        </member>
        <member name="T:ERPConnect.Linq.ERPTableAttribute">
            <summary>
            This attribute is used to set the original table name and custom function name to
            read tables.
            </summary>
        </member>
        <member name="M:ERPConnect.Linq.ERPTableAttribute.#ctor">
            <summary>
            Initializes an instance of the ERPTableAttribute class.
            </summary>
        </member>
        <member name="M:ERPConnect.Linq.ERPTableAttribute.#ctor(System.String)">
            <summary>
            Initializes an instance of the ERPTableAttribute class with a given original table name.
            </summary>
        </member>
        <member name="P:ERPConnect.Linq.ERPTableAttribute.Name">
            <summary>
            Gets and sets the name of the original table.
            </summary>
        </member>
        <member name="P:ERPConnect.Linq.ERPTableAttribute.CustomFunctionName">
            <summary>
            Gets and sets the name of the custom function name to read tables.
            </summary>
        </member>
        <member name="T:ERPConnect.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ERPConnect.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ERPConnect.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ERPConnect.Properties.Resources.ERPConnectNW_x64AssemblyName">
            <summary>
              Looks up a localized string similar to ERPConnectNW45_x64, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1eaee4bac699ed59.
            </summary>
        </member>
        <member name="P:ERPConnect.Properties.Resources.ERPConnectNW_x86AssemblyName">
            <summary>
              Looks up a localized string similar to ERPConnectNW45_x86, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b896fa4ddf1270a6.
            </summary>
        </member>
    </members>
</doc>
